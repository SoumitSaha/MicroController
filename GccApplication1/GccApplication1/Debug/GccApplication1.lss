
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d46  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00000d46  00000dda  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800062  00800062  00000ddc  2**0
                  ALLOC
  3 .stab         00001e84  00000000  00000000  00000ddc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000006a6  00000000  00000000  00002c60  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000080  00000000  00000000  00003308  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000118d  00000000  00000000  00003388  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000269  00000000  00000000  00004515  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000577  00000000  00000000  0000477e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000234  00000000  00000000  00004cf8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000295  00000000  00000000  00004f2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c35  00000000  00000000  000051c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 03 	jmp	0x678	; 0x678 <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e4       	ldi	r30, 0x46	; 70
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a2 e6       	ldi	r26, 0x62	; 98
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 36       	cpi	r26, 0x66	; 102
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <main>
  8a:	0c 94 a1 06 	jmp	0xd42	; 0xd42 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z2Dov>:

void Do()
{
	float frequency=524;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
  92:	60 91 60 00 	lds	r22, 0x0060
  96:	70 91 61 00 	lds	r23, 0x0061
  9a:	88 27       	eor	r24, r24
  9c:	77 fd       	sbrc	r23, 7
  9e:	80 95       	com	r24
  a0:	98 2f       	mov	r25, r24
  a2:	0e 94 8a 05 	call	0xb14	; 0xb14 <__floatsisf>
  a6:	2a e5       	ldi	r18, 0x5A	; 90
  a8:	36 e4       	ldi	r19, 0x46	; 70
  aa:	44 ef       	ldi	r20, 0xF4	; 244
  ac:	5f e3       	ldi	r21, 0x3F	; 63
  ae:	0e 94 ef 04 	call	0x9de	; 0x9de <__divsf3>
  b2:	0e 94 57 05 	call	0xaae	; 0xaae <__fixsfsi>
	PORTC = 0b11111110;
  b6:	8e ef       	ldi	r24, 0xFE	; 254
  b8:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
  ba:	16 16       	cp	r1, r22
  bc:	17 06       	cpc	r1, r23
  be:	9c f4       	brge	.+38     	; 0xe6 <_Z2Dov+0x54>
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(0.95419);
		PORTB=1;
  c4:	21 e0       	ldi	r18, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c6:	ee ee       	ldi	r30, 0xEE	; 238
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	31 97       	sbiw	r30, 0x01	; 1
  cc:	f1 f7       	brne	.-4      	; 0xca <_Z2Dov+0x38>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <_Z2Dov+0x3e>
  d0:	28 bb       	out	0x18, r18	; 24
  d2:	ee ee       	ldi	r30, 0xEE	; 238
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	31 97       	sbiw	r30, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <_Z2Dov+0x44>
  da:	00 c0       	rjmp	.+0      	; 0xdc <_Z2Dov+0x4a>
		_delay_ms(0.95419);
		PORTB=0;
  dc:	18 ba       	out	0x18, r1	; 24
{
	float frequency=524;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
	PORTC = 0b11111110;
	for(int i=0; i<cycles; i++)
  de:	01 96       	adiw	r24, 0x01	; 1
  e0:	86 17       	cp	r24, r22
  e2:	97 07       	cpc	r25, r23
  e4:	81 f7       	brne	.-32     	; 0xc6 <_Z2Dov+0x34>
		_delay_ms(0.95419);
		PORTB=1;
		_delay_ms(0.95419);
		PORTB=0;
	}
	PORTC = 0b11111111;
  e6:	8f ef       	ldi	r24, 0xFF	; 255
  e8:	85 bb       	out	0x15, r24	; 21
}
  ea:	08 95       	ret

000000ec <_Z3Re_v>:

void Re_()
{
	float frequency=555.1586614;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
  ec:	60 91 60 00 	lds	r22, 0x0060
  f0:	70 91 61 00 	lds	r23, 0x0061
  f4:	88 27       	eor	r24, r24
  f6:	77 fd       	sbrc	r23, 7
  f8:	80 95       	com	r24
  fa:	98 2f       	mov	r25, r24
  fc:	0e 94 8a 05 	call	0xb14	; 0xb14 <__floatsisf>
 100:	20 e9       	ldi	r18, 0x90	; 144
 102:	30 e9       	ldi	r19, 0x90	; 144
 104:	46 ee       	ldi	r20, 0xE6	; 230
 106:	5f e3       	ldi	r21, 0x3F	; 63
 108:	0e 94 ef 04 	call	0x9de	; 0x9de <__divsf3>
 10c:	0e 94 57 05 	call	0xaae	; 0xaae <__fixsfsi>
	PORTC = 0b00000010;
 110:	82 e0       	ldi	r24, 0x02	; 2
 112:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 114:	16 16       	cp	r1, r22
 116:	17 06       	cpc	r1, r23
 118:	8c f4       	brge	.+34     	; 0x13c <_Z3Re_v+0x50>
 11a:	80 e0       	ldi	r24, 0x00	; 0
 11c:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(0.90064);
		PORTB=1;
 11e:	21 e0       	ldi	r18, 0x01	; 1
 120:	e1 ee       	ldi	r30, 0xE1	; 225
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	31 97       	sbiw	r30, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <_Z3Re_v+0x38>
 128:	28 bb       	out	0x18, r18	; 24
 12a:	e1 ee       	ldi	r30, 0xE1	; 225
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	31 97       	sbiw	r30, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <_Z3Re_v+0x42>
		_delay_ms(0.90064);
		PORTB=0;
 132:	18 ba       	out	0x18, r1	; 24
{
	float frequency=555.1586614;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
	PORTC = 0b00000010;
	for(int i=0; i<cycles; i++)
 134:	01 96       	adiw	r24, 0x01	; 1
 136:	86 17       	cp	r24, r22
 138:	97 07       	cpc	r25, r23
 13a:	91 f7       	brne	.-28     	; 0x120 <_Z3Re_v+0x34>
		_delay_ms(0.90064);
		PORTB=1;
		_delay_ms(0.90064);
		PORTB=0;
	}
	PORTC = 0b11111111;
 13c:	8f ef       	ldi	r24, 0xFF	; 255
 13e:	85 bb       	out	0x15, r24	; 21
}
 140:	08 95       	ret

00000142 <_Z2Rev>:

void Re()
{
	float frequency=588.1701133;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
 142:	60 91 60 00 	lds	r22, 0x0060
 146:	70 91 61 00 	lds	r23, 0x0061
 14a:	88 27       	eor	r24, r24
 14c:	77 fd       	sbrc	r23, 7
 14e:	80 95       	com	r24
 150:	98 2f       	mov	r25, r24
 152:	0e 94 8a 05 	call	0xb14	; 0xb14 <__floatsisf>
 156:	26 ec       	ldi	r18, 0xC6	; 198
 158:	3f e9       	ldi	r19, 0x9F	; 159
 15a:	49 ed       	ldi	r20, 0xD9	; 217
 15c:	5f e3       	ldi	r21, 0x3F	; 63
 15e:	0e 94 ef 04 	call	0x9de	; 0x9de <__divsf3>
 162:	0e 94 57 05 	call	0xaae	; 0xaae <__fixsfsi>
	PORTC = 0b11111101;
 166:	8d ef       	ldi	r24, 0xFD	; 253
 168:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 16a:	16 16       	cp	r1, r22
 16c:	17 06       	cpc	r1, r23
 16e:	9c f4       	brge	.+38     	; 0x196 <_Z2Rev+0x54>
 170:	80 e0       	ldi	r24, 0x00	; 0
 172:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(.850094);
		PORTB=1;
 174:	21 e0       	ldi	r18, 0x01	; 1
 176:	e4 ed       	ldi	r30, 0xD4	; 212
 178:	f0 e0       	ldi	r31, 0x00	; 0
 17a:	31 97       	sbiw	r30, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <_Z2Rev+0x38>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <_Z2Rev+0x3e>
 180:	28 bb       	out	0x18, r18	; 24
 182:	e4 ed       	ldi	r30, 0xD4	; 212
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	31 97       	sbiw	r30, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <_Z2Rev+0x44>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <_Z2Rev+0x4a>
		_delay_ms(.850094);
		PORTB=0;
 18c:	18 ba       	out	0x18, r1	; 24
{
	float frequency=588.1701133;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
	PORTC = 0b11111101;
	for(int i=0; i<cycles; i++)
 18e:	01 96       	adiw	r24, 0x01	; 1
 190:	86 17       	cp	r24, r22
 192:	97 07       	cpc	r25, r23
 194:	81 f7       	brne	.-32     	; 0x176 <_Z2Rev+0x34>
		_delay_ms(.850094);
		PORTB=1;
		_delay_ms(.850094);
		PORTB=0;
	}
	PORTC = 0b11111111;
 196:	8f ef       	ldi	r24, 0xFF	; 255
 198:	85 bb       	out	0x15, r24	; 21
}
 19a:	08 95       	ret

0000019c <_Z3Mi_v>:

void Mi_()
{
	float frequency=623.1445282;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
 19c:	60 91 60 00 	lds	r22, 0x0060
 1a0:	70 91 61 00 	lds	r23, 0x0061
 1a4:	88 27       	eor	r24, r24
 1a6:	77 fd       	sbrc	r23, 7
 1a8:	80 95       	com	r24
 1aa:	98 2f       	mov	r25, r24
 1ac:	0e 94 8a 05 	call	0xb14	; 0xb14 <__floatsisf>
 1b0:	29 ee       	ldi	r18, 0xE9	; 233
 1b2:	38 e6       	ldi	r19, 0x68	; 104
 1b4:	4d ec       	ldi	r20, 0xCD	; 205
 1b6:	5f e3       	ldi	r21, 0x3F	; 63
 1b8:	0e 94 ef 04 	call	0x9de	; 0x9de <__divsf3>
 1bc:	0e 94 57 05 	call	0xaae	; 0xaae <__fixsfsi>
	PORTC = 0b00000100;
 1c0:	84 e0       	ldi	r24, 0x04	; 4
 1c2:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 1c4:	16 16       	cp	r1, r22
 1c6:	17 06       	cpc	r1, r23
 1c8:	9c f4       	brge	.+38     	; 0x1f0 <_Z3Mi_v+0x54>
 1ca:	80 e0       	ldi	r24, 0x00	; 0
 1cc:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(.80238);
		PORTB=1;
 1ce:	21 e0       	ldi	r18, 0x01	; 1
 1d0:	e8 ec       	ldi	r30, 0xC8	; 200
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	31 97       	sbiw	r30, 0x01	; 1
 1d6:	f1 f7       	brne	.-4      	; 0x1d4 <_Z3Mi_v+0x38>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <_Z3Mi_v+0x3e>
 1da:	28 bb       	out	0x18, r18	; 24
 1dc:	e8 ec       	ldi	r30, 0xC8	; 200
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	31 97       	sbiw	r30, 0x01	; 1
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <_Z3Mi_v+0x44>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <_Z3Mi_v+0x4a>
		_delay_ms(.80238);
		PORTB=0;
 1e6:	18 ba       	out	0x18, r1	; 24
{
	float frequency=623.1445282;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
	PORTC = 0b00000100;
	for(int i=0; i<cycles; i++)
 1e8:	01 96       	adiw	r24, 0x01	; 1
 1ea:	86 17       	cp	r24, r22
 1ec:	97 07       	cpc	r25, r23
 1ee:	81 f7       	brne	.-32     	; 0x1d0 <_Z3Mi_v+0x34>
		_delay_ms(.80238);
		PORTB=1;
		_delay_ms(.80238);
		PORTB=0;
	}
	PORTC = 0b11111111;
 1f0:	8f ef       	ldi	r24, 0xFF	; 255
 1f2:	85 bb       	out	0x15, r24	; 21
}
 1f4:	08 95       	ret

000001f6 <_Z2Miv>:

void Mi()
{
	float frequency=660.1986301;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
 1f6:	60 91 60 00 	lds	r22, 0x0060
 1fa:	70 91 61 00 	lds	r23, 0x0061
 1fe:	88 27       	eor	r24, r24
 200:	77 fd       	sbrc	r23, 7
 202:	80 95       	com	r24
 204:	98 2f       	mov	r25, r24
 206:	0e 94 8a 05 	call	0xb14	; 0xb14 <__floatsisf>
 20a:	2c e8       	ldi	r18, 0x8C	; 140
 20c:	31 ee       	ldi	r19, 0xE1	; 225
 20e:	41 ec       	ldi	r20, 0xC1	; 193
 210:	5f e3       	ldi	r21, 0x3F	; 63
 212:	0e 94 ef 04 	call	0x9de	; 0x9de <__divsf3>
 216:	0e 94 57 05 	call	0xaae	; 0xaae <__fixsfsi>
	PORTC = 0b11111011;
 21a:	8b ef       	ldi	r24, 0xFB	; 251
 21c:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 21e:	16 16       	cp	r1, r22
 220:	17 06       	cpc	r1, r23
 222:	8c f4       	brge	.+34     	; 0x246 <_Z2Miv+0x50>
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(.75734);
		PORTB=1;
 228:	21 e0       	ldi	r18, 0x01	; 1
 22a:	3c ef       	ldi	r19, 0xFC	; 252
 22c:	3a 95       	dec	r19
 22e:	f1 f7       	brne	.-4      	; 0x22c <_Z2Miv+0x36>
 230:	00 c0       	rjmp	.+0      	; 0x232 <_Z2Miv+0x3c>
 232:	28 bb       	out	0x18, r18	; 24
 234:	3c ef       	ldi	r19, 0xFC	; 252
 236:	3a 95       	dec	r19
 238:	f1 f7       	brne	.-4      	; 0x236 <_Z2Miv+0x40>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <_Z2Miv+0x46>
		_delay_ms(.75734);
		PORTB=0;
 23c:	18 ba       	out	0x18, r1	; 24
{
	float frequency=660.1986301;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
	PORTC = 0b11111011;
	for(int i=0; i<cycles; i++)
 23e:	01 96       	adiw	r24, 0x01	; 1
 240:	86 17       	cp	r24, r22
 242:	97 07       	cpc	r25, r23
 244:	91 f7       	brne	.-28     	; 0x22a <_Z2Miv+0x34>
		_delay_ms(.75734);
		PORTB=1;
		_delay_ms(.75734);
		PORTB=0;
	}
	PORTC = 0b11111111;
 246:	8f ef       	ldi	r24, 0xFF	; 255
 248:	85 bb       	out	0x15, r24	; 21
}
 24a:	08 95       	ret

0000024c <_Z3Fa_v>:
void Fa_()
{
	float frequency=741.0479066;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
 24c:	60 91 60 00 	lds	r22, 0x0060
 250:	70 91 61 00 	lds	r23, 0x0061
 254:	88 27       	eor	r24, r24
 256:	77 fd       	sbrc	r23, 7
 258:	80 95       	com	r24
 25a:	98 2f       	mov	r25, r24
 25c:	0e 94 8a 05 	call	0xb14	; 0xb14 <__floatsisf>
 260:	27 e7       	ldi	r18, 0x77	; 119
 262:	3a eb       	ldi	r19, 0xBA	; 186
 264:	4c ea       	ldi	r20, 0xAC	; 172
 266:	5f e3       	ldi	r21, 0x3F	; 63
 268:	0e 94 ef 04 	call	0x9de	; 0x9de <__divsf3>
 26c:	0e 94 57 05 	call	0xaae	; 0xaae <__fixsfsi>
	PORTC = 0b00001000;
 270:	88 e0       	ldi	r24, 0x08	; 8
 272:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 274:	16 16       	cp	r1, r22
 276:	17 06       	cpc	r1, r23
 278:	7c f4       	brge	.+30     	; 0x298 <_Z3Fa_v+0x4c>
 27a:	80 e0       	ldi	r24, 0x00	; 0
 27c:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(.67472);
		PORTB=1;
 27e:	21 e0       	ldi	r18, 0x01	; 1
 280:	31 ee       	ldi	r19, 0xE1	; 225
 282:	3a 95       	dec	r19
 284:	f1 f7       	brne	.-4      	; 0x282 <_Z3Fa_v+0x36>
 286:	28 bb       	out	0x18, r18	; 24
 288:	31 ee       	ldi	r19, 0xE1	; 225
 28a:	3a 95       	dec	r19
 28c:	f1 f7       	brne	.-4      	; 0x28a <_Z3Fa_v+0x3e>
		_delay_ms(.67472);
		PORTB=0;
 28e:	18 ba       	out	0x18, r1	; 24
	float frequency=741.0479066;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
	PORTC = 0b00001000;
	for(int i=0; i<cycles; i++)
 290:	01 96       	adiw	r24, 0x01	; 1
 292:	86 17       	cp	r24, r22
 294:	97 07       	cpc	r25, r23
 296:	a1 f7       	brne	.-24     	; 0x280 <_Z3Fa_v+0x34>
		_delay_ms(.67472);
		PORTB=1;
		_delay_ms(.67472);
		PORTB=0;
	}
	PORTC = 0b11111111;
 298:	8f ef       	ldi	r24, 0xFF	; 255
 29a:	85 bb       	out	0x15, r24	; 21
}
 29c:	08 95       	ret

0000029e <_Z2Fav>:
void Fa()
{
	float frequency=699.4560835;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
 29e:	60 91 60 00 	lds	r22, 0x0060
 2a2:	70 91 61 00 	lds	r23, 0x0061
 2a6:	88 27       	eor	r24, r24
 2a8:	77 fd       	sbrc	r23, 7
 2aa:	80 95       	com	r24
 2ac:	98 2f       	mov	r25, r24
 2ae:	0e 94 8a 05 	call	0xb14	; 0xb14 <__floatsisf>
 2b2:	25 ed       	ldi	r18, 0xD5	; 213
 2b4:	3f ef       	ldi	r19, 0xFF	; 255
 2b6:	46 eb       	ldi	r20, 0xB6	; 182
 2b8:	5f e3       	ldi	r21, 0x3F	; 63
 2ba:	0e 94 ef 04 	call	0x9de	; 0x9de <__divsf3>
 2be:	0e 94 57 05 	call	0xaae	; 0xaae <__fixsfsi>
	PORTC = 0b11110111;
 2c2:	87 ef       	ldi	r24, 0xF7	; 247
 2c4:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 2c6:	16 16       	cp	r1, r22
 2c8:	17 06       	cpc	r1, r23
 2ca:	8c f4       	brge	.+34     	; 0x2ee <_Z2Fav+0x50>
 2cc:	80 e0       	ldi	r24, 0x00	; 0
 2ce:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(.71484);
		PORTB=1;
 2d0:	21 e0       	ldi	r18, 0x01	; 1
 2d2:	3e ee       	ldi	r19, 0xEE	; 238
 2d4:	3a 95       	dec	r19
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <_Z2Fav+0x36>
 2d8:	00 00       	nop
 2da:	28 bb       	out	0x18, r18	; 24
 2dc:	3e ee       	ldi	r19, 0xEE	; 238
 2de:	3a 95       	dec	r19
 2e0:	f1 f7       	brne	.-4      	; 0x2de <_Z2Fav+0x40>
 2e2:	00 00       	nop
		_delay_ms(.71484);
		PORTB=0;
 2e4:	18 ba       	out	0x18, r1	; 24
	float frequency=699.4560835;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
	PORTC = 0b11110111;
	for(int i=0; i<cycles; i++)
 2e6:	01 96       	adiw	r24, 0x01	; 1
 2e8:	86 17       	cp	r24, r22
 2ea:	97 07       	cpc	r25, r23
 2ec:	91 f7       	brne	.-28     	; 0x2d2 <_Z2Fav+0x34>
		_delay_ms(.71484);
		PORTB=1;
		_delay_ms(.71484);
		PORTB=0;
	}
	PORTC = 0b11111111;
 2ee:	8f ef       	ldi	r24, 0xFF	; 255
 2f0:	85 bb       	out	0x15, r24	; 21
}
 2f2:	08 95       	ret

000002f4 <_Z2Sov>:
void So()
{
	float frequency=785.1129082;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
 2f4:	60 91 60 00 	lds	r22, 0x0060
 2f8:	70 91 61 00 	lds	r23, 0x0061
 2fc:	88 27       	eor	r24, r24
 2fe:	77 fd       	sbrc	r23, 7
 300:	80 95       	com	r24
 302:	98 2f       	mov	r25, r24
 304:	0e 94 8a 05 	call	0xb14	; 0xb14 <__floatsisf>
 308:	2c ea       	ldi	r18, 0xAC	; 172
 30a:	38 e0       	ldi	r19, 0x08	; 8
 30c:	43 ea       	ldi	r20, 0xA3	; 163
 30e:	5f e3       	ldi	r21, 0x3F	; 63
 310:	0e 94 ef 04 	call	0x9de	; 0x9de <__divsf3>
 314:	0e 94 57 05 	call	0xaae	; 0xaae <__fixsfsi>
	PORTC = 0b11101111;
 318:	8f ee       	ldi	r24, 0xEF	; 239
 31a:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 31c:	16 16       	cp	r1, r22
 31e:	17 06       	cpc	r1, r23
 320:	8c f4       	brge	.+34     	; 0x344 <_Z2Sov+0x50>
 322:	80 e0       	ldi	r24, 0x00	; 0
 324:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(0.63685);
		PORTB=1;
 326:	21 e0       	ldi	r18, 0x01	; 1
 328:	34 ed       	ldi	r19, 0xD4	; 212
 32a:	3a 95       	dec	r19
 32c:	f1 f7       	brne	.-4      	; 0x32a <_Z2Sov+0x36>
 32e:	00 00       	nop
 330:	28 bb       	out	0x18, r18	; 24
 332:	34 ed       	ldi	r19, 0xD4	; 212
 334:	3a 95       	dec	r19
 336:	f1 f7       	brne	.-4      	; 0x334 <_Z2Sov+0x40>
 338:	00 00       	nop
		_delay_ms(0.63685);
		PORTB=0;
 33a:	18 ba       	out	0x18, r1	; 24
	float frequency=785.1129082;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
	PORTC = 0b11101111;
	for(int i=0; i<cycles; i++)
 33c:	01 96       	adiw	r24, 0x01	; 1
 33e:	86 17       	cp	r24, r22
 340:	97 07       	cpc	r25, r23
 342:	91 f7       	brne	.-28     	; 0x328 <_Z2Sov+0x34>
		_delay_ms(0.63685);
		PORTB=1;
		_delay_ms(0.63685);
		PORTB=0;
	}
	PORTC = 0b11111111;
 344:	8f ef       	ldi	r24, 0xFF	; 255
 346:	85 bb       	out	0x15, r24	; 21
}
 348:	08 95       	ret

0000034a <_Z3La_v>:
void La_()
{
	float frequency=831.7981511;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
 34a:	60 91 60 00 	lds	r22, 0x0060
 34e:	70 91 61 00 	lds	r23, 0x0061
 352:	88 27       	eor	r24, r24
 354:	77 fd       	sbrc	r23, 7
 356:	80 95       	com	r24
 358:	98 2f       	mov	r25, r24
 35a:	0e 94 8a 05 	call	0xb14	; 0xb14 <__floatsisf>
 35e:	2c e2       	ldi	r18, 0x2C	; 44
 360:	32 ee       	ldi	r19, 0xE2	; 226
 362:	49 e9       	ldi	r20, 0x99	; 153
 364:	5f e3       	ldi	r21, 0x3F	; 63
 366:	0e 94 ef 04 	call	0x9de	; 0x9de <__divsf3>
 36a:	0e 94 57 05 	call	0xaae	; 0xaae <__fixsfsi>
	PORTC = 0b00100000;
 36e:	80 e2       	ldi	r24, 0x20	; 32
 370:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 372:	16 16       	cp	r1, r22
 374:	17 06       	cpc	r1, r23
 376:	8c f4       	brge	.+34     	; 0x39a <_Z3La_v+0x50>
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(0.6011073);
		PORTB=1;
 37c:	21 e0       	ldi	r18, 0x01	; 1
 37e:	38 ec       	ldi	r19, 0xC8	; 200
 380:	3a 95       	dec	r19
 382:	f1 f7       	brne	.-4      	; 0x380 <_Z3La_v+0x36>
 384:	00 c0       	rjmp	.+0      	; 0x386 <_Z3La_v+0x3c>
 386:	28 bb       	out	0x18, r18	; 24
 388:	38 ec       	ldi	r19, 0xC8	; 200
 38a:	3a 95       	dec	r19
 38c:	f1 f7       	brne	.-4      	; 0x38a <_Z3La_v+0x40>
 38e:	00 c0       	rjmp	.+0      	; 0x390 <_Z3La_v+0x46>
		_delay_ms(0.6011073);
		PORTB=0;
 390:	18 ba       	out	0x18, r1	; 24
	float frequency=831.7981511;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
	PORTC = 0b00100000;
	for(int i=0; i<cycles; i++)
 392:	01 96       	adiw	r24, 0x01	; 1
 394:	86 17       	cp	r24, r22
 396:	97 07       	cpc	r25, r23
 398:	91 f7       	brne	.-28     	; 0x37e <_Z3La_v+0x34>
		_delay_ms(0.6011073);
		PORTB=1;
		_delay_ms(0.6011073);
		PORTB=0;
	}
	PORTC = 0b11111111;
 39a:	8f ef       	ldi	r24, 0xFF	; 255
 39c:	85 bb       	out	0x15, r24	; 21
}
 39e:	08 95       	ret

000003a0 <_Z2Lav>:
void La()
{
	float frequency=881.2594431;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
 3a0:	60 91 60 00 	lds	r22, 0x0060
 3a4:	70 91 61 00 	lds	r23, 0x0061
 3a8:	88 27       	eor	r24, r24
 3aa:	77 fd       	sbrc	r23, 7
 3ac:	80 95       	com	r24
 3ae:	98 2f       	mov	r25, r24
 3b0:	0e 94 8a 05 	call	0xb14	; 0xb14 <__floatsisf>
 3b4:	26 e2       	ldi	r18, 0x26	; 38
 3b6:	3f e3       	ldi	r19, 0x3F	; 63
 3b8:	41 e9       	ldi	r20, 0x91	; 145
 3ba:	5f e3       	ldi	r21, 0x3F	; 63
 3bc:	0e 94 ef 04 	call	0x9de	; 0x9de <__divsf3>
 3c0:	0e 94 57 05 	call	0xaae	; 0xaae <__fixsfsi>
	PORTC = 0b11011111;
 3c4:	8f ed       	ldi	r24, 0xDF	; 223
 3c6:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 3c8:	16 16       	cp	r1, r22
 3ca:	17 06       	cpc	r1, r23
 3cc:	8c f4       	brge	.+34     	; 0x3f0 <_Z2Lav+0x50>
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(0.56736);
		PORTB=1;
 3d2:	21 e0       	ldi	r18, 0x01	; 1
 3d4:	3d eb       	ldi	r19, 0xBD	; 189
 3d6:	3a 95       	dec	r19
 3d8:	f1 f7       	brne	.-4      	; 0x3d6 <_Z2Lav+0x36>
 3da:	00 00       	nop
 3dc:	28 bb       	out	0x18, r18	; 24
 3de:	3d eb       	ldi	r19, 0xBD	; 189
 3e0:	3a 95       	dec	r19
 3e2:	f1 f7       	brne	.-4      	; 0x3e0 <_Z2Lav+0x40>
 3e4:	00 00       	nop
		_delay_ms(0.56736);
		PORTB=0;
 3e6:	18 ba       	out	0x18, r1	; 24
	float frequency=881.2594431;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
	PORTC = 0b11011111;
	for(int i=0; i<cycles; i++)
 3e8:	01 96       	adiw	r24, 0x01	; 1
 3ea:	86 17       	cp	r24, r22
 3ec:	97 07       	cpc	r25, r23
 3ee:	91 f7       	brne	.-28     	; 0x3d4 <_Z2Lav+0x34>
		_delay_ms(0.56736);
		PORTB=1;
		_delay_ms(0.56736);
		PORTB=0;
	}
	PORTC = 0b11111111;
 3f0:	8f ef       	ldi	r24, 0xFF	; 255
 3f2:	85 bb       	out	0x15, r24	; 21
}
 3f4:	08 95       	ret

000003f6 <_Z3Ti_v>:
void Ti_()
{
	float frequency=933.6618565;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
 3f6:	60 91 60 00 	lds	r22, 0x0060
 3fa:	70 91 61 00 	lds	r23, 0x0061
 3fe:	88 27       	eor	r24, r24
 400:	77 fd       	sbrc	r23, 7
 402:	80 95       	com	r24
 404:	98 2f       	mov	r25, r24
 406:	0e 94 8a 05 	call	0xb14	; 0xb14 <__floatsisf>
 40a:	28 e3       	ldi	r18, 0x38	; 56
 40c:	38 e1       	ldi	r19, 0x18	; 24
 40e:	49 e8       	ldi	r20, 0x89	; 137
 410:	5f e3       	ldi	r21, 0x3F	; 63
 412:	0e 94 ef 04 	call	0x9de	; 0x9de <__divsf3>
 416:	0e 94 57 05 	call	0xaae	; 0xaae <__fixsfsi>
	PORTC = 0b01000000;
 41a:	80 e4       	ldi	r24, 0x40	; 64
 41c:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 41e:	16 16       	cp	r1, r22
 420:	17 06       	cpc	r1, r23
 422:	8c f4       	brge	.+34     	; 0x446 <_Z3Ti_v+0x50>
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(0.5355257);
		PORTB=1;
 428:	21 e0       	ldi	r18, 0x01	; 1
 42a:	32 eb       	ldi	r19, 0xB2	; 178
 42c:	3a 95       	dec	r19
 42e:	f1 f7       	brne	.-4      	; 0x42c <_Z3Ti_v+0x36>
 430:	00 c0       	rjmp	.+0      	; 0x432 <_Z3Ti_v+0x3c>
 432:	28 bb       	out	0x18, r18	; 24
 434:	32 eb       	ldi	r19, 0xB2	; 178
 436:	3a 95       	dec	r19
 438:	f1 f7       	brne	.-4      	; 0x436 <_Z3Ti_v+0x40>
 43a:	00 c0       	rjmp	.+0      	; 0x43c <_Z3Ti_v+0x46>
		_delay_ms(0.5355257);
		PORTB=0;
 43c:	18 ba       	out	0x18, r1	; 24
	float frequency=933.6618565;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
	PORTC = 0b01000000;
	for(int i=0; i<cycles; i++)
 43e:	01 96       	adiw	r24, 0x01	; 1
 440:	86 17       	cp	r24, r22
 442:	97 07       	cpc	r25, r23
 444:	91 f7       	brne	.-28     	; 0x42a <_Z3Ti_v+0x34>
		_delay_ms(0.5355257);
		PORTB=1;
		_delay_ms(0.5355257);
		PORTB=0;
	}
	PORTC = 0b11111111;
 446:	8f ef       	ldi	r24, 0xFF	; 255
 448:	85 bb       	out	0x15, r24	; 21
}
 44a:	08 95       	ret

0000044c <_Z2Tiv>:
void Ti()
{
	float frequency=989.1802796;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
 44c:	60 91 60 00 	lds	r22, 0x0060
 450:	70 91 61 00 	lds	r23, 0x0061
 454:	88 27       	eor	r24, r24
 456:	77 fd       	sbrc	r23, 7
 458:	80 95       	com	r24
 45a:	98 2f       	mov	r25, r24
 45c:	0e 94 8a 05 	call	0xb14	; 0xb14 <__floatsisf>
 460:	2b e6       	ldi	r18, 0x6B	; 107
 462:	36 e6       	ldi	r19, 0x66	; 102
 464:	41 e8       	ldi	r20, 0x81	; 129
 466:	5f e3       	ldi	r21, 0x3F	; 63
 468:	0e 94 ef 04 	call	0x9de	; 0x9de <__divsf3>
 46c:	0e 94 57 05 	call	0xaae	; 0xaae <__fixsfsi>
	PORTC = 0b10111111;
 470:	8f eb       	ldi	r24, 0xBF	; 191
 472:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 474:	16 16       	cp	r1, r22
 476:	17 06       	cpc	r1, r23
 478:	8c f4       	brge	.+34     	; 0x49c <_Z2Tiv+0x50>
 47a:	80 e0       	ldi	r24, 0x00	; 0
 47c:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(0.50546);
		PORTB=1;
 47e:	21 e0       	ldi	r18, 0x01	; 1
 480:	38 ea       	ldi	r19, 0xA8	; 168
 482:	3a 95       	dec	r19
 484:	f1 f7       	brne	.-4      	; 0x482 <_Z2Tiv+0x36>
 486:	00 c0       	rjmp	.+0      	; 0x488 <_Z2Tiv+0x3c>
 488:	28 bb       	out	0x18, r18	; 24
 48a:	38 ea       	ldi	r19, 0xA8	; 168
 48c:	3a 95       	dec	r19
 48e:	f1 f7       	brne	.-4      	; 0x48c <_Z2Tiv+0x40>
 490:	00 c0       	rjmp	.+0      	; 0x492 <_Z2Tiv+0x46>
		_delay_ms(0.50546);
		PORTB=0;
 492:	18 ba       	out	0x18, r1	; 24
	float frequency=989.1802796;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
	PORTC = 0b10111111;
	for(int i=0; i<cycles; i++)
 494:	01 96       	adiw	r24, 0x01	; 1
 496:	86 17       	cp	r24, r22
 498:	97 07       	cpc	r25, r23
 49a:	91 f7       	brne	.-28     	; 0x480 <_Z2Tiv+0x34>
		_delay_ms(0.50546);
		PORTB=1;
		_delay_ms(0.50546);
		PORTB=0;
	}
	PORTC = 0b11111111;
 49c:	8f ef       	ldi	r24, 0xFF	; 255
 49e:	85 bb       	out	0x15, r24	; 21
}
 4a0:	08 95       	ret

000004a2 <_Z6DoHighv>:
void DoHigh()
{
	float frequency=1048;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
 4a2:	60 91 60 00 	lds	r22, 0x0060
 4a6:	70 91 61 00 	lds	r23, 0x0061
 4aa:	88 27       	eor	r24, r24
 4ac:	77 fd       	sbrc	r23, 7
 4ae:	80 95       	com	r24
 4b0:	98 2f       	mov	r25, r24
 4b2:	0e 94 8a 05 	call	0xb14	; 0xb14 <__floatsisf>
 4b6:	2a e5       	ldi	r18, 0x5A	; 90
 4b8:	36 e4       	ldi	r19, 0x46	; 70
 4ba:	44 e7       	ldi	r20, 0x74	; 116
 4bc:	5f e3       	ldi	r21, 0x3F	; 63
 4be:	0e 94 ef 04 	call	0x9de	; 0x9de <__divsf3>
 4c2:	0e 94 57 05 	call	0xaae	; 0xaae <__fixsfsi>
	PORTC = 0b01111111;
 4c6:	8f e7       	ldi	r24, 0x7F	; 127
 4c8:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 4ca:	16 16       	cp	r1, r22
 4cc:	17 06       	cpc	r1, r23
 4ce:	8c f4       	brge	.+34     	; 0x4f2 <_Z6DoHighv+0x50>
 4d0:	80 e0       	ldi	r24, 0x00	; 0
 4d2:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(.477099);
		PORTB=1;
 4d4:	21 e0       	ldi	r18, 0x01	; 1
 4d6:	3f e9       	ldi	r19, 0x9F	; 159
 4d8:	3a 95       	dec	r19
 4da:	f1 f7       	brne	.-4      	; 0x4d8 <_Z6DoHighv+0x36>
 4dc:	00 00       	nop
 4de:	28 bb       	out	0x18, r18	; 24
 4e0:	3f e9       	ldi	r19, 0x9F	; 159
 4e2:	3a 95       	dec	r19
 4e4:	f1 f7       	brne	.-4      	; 0x4e2 <_Z6DoHighv+0x40>
 4e6:	00 00       	nop
		_delay_ms(.477099);
		PORTB=0;
 4e8:	18 ba       	out	0x18, r1	; 24
	float frequency=1048;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
	PORTC = 0b01111111;
	for(int i=0; i<cycles; i++)
 4ea:	01 96       	adiw	r24, 0x01	; 1
 4ec:	86 17       	cp	r24, r22
 4ee:	97 07       	cpc	r25, r23
 4f0:	91 f7       	brne	.-28     	; 0x4d6 <_Z6DoHighv+0x34>
		_delay_ms(.477099);
		PORTB=1;
		_delay_ms(.477099);
		PORTB=0;
	}
	PORTC = 0b11111111;
 4f2:	8f ef       	ldi	r24, 0xFF	; 255
 4f4:	85 bb       	out	0x15, r24	; 21
}
 4f6:	08 95       	ret

000004f8 <_Z11EEPROMWritejc>:



void EEPROMWrite(unsigned int address, char data)
{
	while(EECR&(1<<EEWE));
 4f8:	e1 99       	sbic	0x1c, 1	; 28
 4fa:	fe cf       	rjmp	.-4      	; 0x4f8 <_Z11EEPROMWritejc>
	EEAR=address;
 4fc:	9f bb       	out	0x1f, r25	; 31
 4fe:	8e bb       	out	0x1e, r24	; 30
	EEDR=data;
 500:	6d bb       	out	0x1d, r22	; 29
	EECR|=(1<<EEMWE);
 502:	e2 9a       	sbi	0x1c, 2	; 28
	EECR|=(1<<EEWE);
 504:	e1 9a       	sbi	0x1c, 1	; 28
}
 506:	08 95       	ret

00000508 <_Z10EEPROMReadj>:

char EEPROMRead(unsigned int address)
{
	while(EECR&(1<<EEWE));
 508:	e1 99       	sbic	0x1c, 1	; 28
 50a:	fe cf       	rjmp	.-4      	; 0x508 <_Z10EEPROMReadj>
	EEAR=address;
 50c:	9f bb       	out	0x1f, r25	; 31
 50e:	8e bb       	out	0x1e, r24	; 30
	EECR|=(1<<EERE);
 510:	e0 9a       	sbi	0x1c, 0	; 28
	return EEDR;
 512:	8d b3       	in	r24, 0x1d	; 29
}
 514:	08 95       	ret

00000516 <_Z8readNotec>:

void readNote(char data)
{
 516:	cf 93       	push	r28
 518:	c8 2f       	mov	r28, r24
	if(data==1)
 51a:	81 30       	cpi	r24, 0x01	; 1
 51c:	19 f4       	brne	.+6      	; 0x524 <_Z8readNotec+0xe>
	{
		Do();
 51e:	0e 94 49 00 	call	0x92	; 0x92 <_Z2Dov>
 522:	0a c0       	rjmp	.+20     	; 0x538 <_Z8readNotec+0x22>
	}
	if(data==2)
 524:	82 30       	cpi	r24, 0x02	; 2
 526:	19 f4       	brne	.+6      	; 0x52e <_Z8readNotec+0x18>
	{
		Re();
 528:	0e 94 a1 00 	call	0x142	; 0x142 <_Z2Rev>
 52c:	0a c0       	rjmp	.+20     	; 0x542 <_Z8readNotec+0x2c>
	}
	if(data==3)
 52e:	83 30       	cpi	r24, 0x03	; 3
 530:	19 f4       	brne	.+6      	; 0x538 <_Z8readNotec+0x22>
	{
		Mi();
 532:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <_Z2Miv>
 536:	0a c0       	rjmp	.+20     	; 0x54c <_Z8readNotec+0x36>
	}
	if(data==4)
 538:	c4 30       	cpi	r28, 0x04	; 4
 53a:	19 f4       	brne	.+6      	; 0x542 <_Z8readNotec+0x2c>
	{
		Fa();
 53c:	0e 94 4f 01 	call	0x29e	; 0x29e <_Z2Fav>
 540:	0a c0       	rjmp	.+20     	; 0x556 <_Z8readNotec+0x40>
	}
	if(data==5)
 542:	c5 30       	cpi	r28, 0x05	; 5
 544:	19 f4       	brne	.+6      	; 0x54c <_Z8readNotec+0x36>
	{
		So();
 546:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <_Z2Sov>
 54a:	0a c0       	rjmp	.+20     	; 0x560 <_Z8readNotec+0x4a>
	}
	if(data==6)
 54c:	c6 30       	cpi	r28, 0x06	; 6
 54e:	19 f4       	brne	.+6      	; 0x556 <_Z8readNotec+0x40>
	{
		La();
 550:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <_Z2Lav>
 554:	0a c0       	rjmp	.+20     	; 0x56a <_Z8readNotec+0x54>
	}
	if(data==7)
 556:	c7 30       	cpi	r28, 0x07	; 7
 558:	19 f4       	brne	.+6      	; 0x560 <_Z8readNotec+0x4a>
	{
		Ti();
 55a:	0e 94 26 02 	call	0x44c	; 0x44c <_Z2Tiv>
 55e:	0a c0       	rjmp	.+20     	; 0x574 <_Z8readNotec+0x5e>
	}
	if(data==8)
 560:	c8 30       	cpi	r28, 0x08	; 8
 562:	19 f4       	brne	.+6      	; 0x56a <_Z8readNotec+0x54>
	{
		DoHigh();
 564:	0e 94 51 02 	call	0x4a2	; 0x4a2 <_Z6DoHighv>
 568:	0a c0       	rjmp	.+20     	; 0x57e <_Z8readNotec+0x68>
	}
	if (data==10)
 56a:	ca 30       	cpi	r28, 0x0A	; 10
 56c:	19 f4       	brne	.+6      	; 0x574 <_Z8readNotec+0x5e>
	{
		Re_();
 56e:	0e 94 76 00 	call	0xec	; 0xec <_Z3Re_v>
 572:	0a c0       	rjmp	.+20     	; 0x588 <_Z8readNotec+0x72>
	}
	if(data==11)
 574:	cb 30       	cpi	r28, 0x0B	; 11
 576:	19 f4       	brne	.+6      	; 0x57e <_Z8readNotec+0x68>
	{
		Mi_();
 578:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z3Mi_v>
 57c:	0a c0       	rjmp	.+20     	; 0x592 <_Z8readNotec+0x7c>
	}
	if(data==12)
 57e:	cc 30       	cpi	r28, 0x0C	; 12
 580:	19 f4       	brne	.+6      	; 0x588 <_Z8readNotec+0x72>
	{
		Fa_();
 582:	0e 94 26 01 	call	0x24c	; 0x24c <_Z3Fa_v>
 586:	09 c0       	rjmp	.+18     	; 0x59a <_Z8readNotec+0x84>
	}
	if(data==13)
 588:	cd 30       	cpi	r28, 0x0D	; 13
 58a:	19 f4       	brne	.+6      	; 0x592 <_Z8readNotec+0x7c>
	{
		La_();
 58c:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z3La_v>
 590:	04 c0       	rjmp	.+8      	; 0x59a <_Z8readNotec+0x84>
	}
	if(data==14)
 592:	ce 30       	cpi	r28, 0x0E	; 14
 594:	11 f4       	brne	.+4      	; 0x59a <_Z8readNotec+0x84>
	{
		Ti_();
 596:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z3Ti_v>
	}
}
 59a:	cf 91       	pop	r28
 59c:	08 95       	ret

0000059e <_Z10playNote1sc>:


void playNote1s(char data)
{
 59e:	1f 93       	push	r17
 5a0:	cf 93       	push	r28
 5a2:	df 93       	push	r29
 5a4:	18 2f       	mov	r17, r24
 5a6:	c4 e6       	ldi	r28, 0x64	; 100
 5a8:	d0 e0       	ldi	r29, 0x00	; 0
	int i;
	for(i=0; i<100; i++)
	{
		readNote(data);
 5aa:	81 2f       	mov	r24, r17
 5ac:	0e 94 8b 02 	call	0x516	; 0x516 <_Z8readNotec>
 5b0:	21 97       	sbiw	r28, 0x01	; 1


void playNote1s(char data)
{
	int i;
	for(i=0; i<100; i++)
 5b2:	d9 f7       	brne	.-10     	; 0x5aa <_Z10playNote1sc+0xc>
	{
		readNote(data);
	}
}
 5b4:	df 91       	pop	r29
 5b6:	cf 91       	pop	r28
 5b8:	1f 91       	pop	r17
 5ba:	08 95       	ret

000005bc <_Z11EEPROMClearv>:

void EEPROMClear()
{
 5bc:	cf 93       	push	r28
 5be:	df 93       	push	r29
	int i;
	for(i=0; i<1023; i++)
 5c0:	c0 e0       	ldi	r28, 0x00	; 0
 5c2:	d0 e0       	ldi	r29, 0x00	; 0
	{
		EEPROMWrite(i, 255);
 5c4:	ce 01       	movw	r24, r28
 5c6:	6f ef       	ldi	r22, 0xFF	; 255
 5c8:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z11EEPROMWritejc>
}

void EEPROMClear()
{
	int i;
	for(i=0; i<1023; i++)
 5cc:	21 96       	adiw	r28, 0x01	; 1
 5ce:	83 e0       	ldi	r24, 0x03	; 3
 5d0:	cf 3f       	cpi	r28, 0xFF	; 255
 5d2:	d8 07       	cpc	r29, r24
 5d4:	b9 f7       	brne	.-18     	; 0x5c4 <_Z11EEPROMClearv+0x8>
	{
		EEPROMWrite(i, 255);
	}
}
 5d6:	df 91       	pop	r29
 5d8:	cf 91       	pop	r28
 5da:	08 95       	ret

000005dc <__vector_3>:

ISR(INT2_vect){
 5dc:	1f 92       	push	r1
 5de:	0f 92       	push	r0
 5e0:	0f b6       	in	r0, 0x3f	; 63
 5e2:	0f 92       	push	r0
 5e4:	11 24       	eor	r1, r1
 5e6:	2f 93       	push	r18
 5e8:	3f 93       	push	r19
 5ea:	4f 93       	push	r20
 5ec:	5f 93       	push	r21
 5ee:	6f 93       	push	r22
 5f0:	7f 93       	push	r23
 5f2:	8f 93       	push	r24
 5f4:	9f 93       	push	r25
 5f6:	af 93       	push	r26
 5f8:	bf 93       	push	r27
 5fa:	ef 93       	push	r30
 5fc:	ff 93       	push	r31
	save = 1 - save;
 5fe:	20 91 64 00 	lds	r18, 0x0064
 602:	30 91 65 00 	lds	r19, 0x0065
 606:	81 e0       	ldi	r24, 0x01	; 1
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	82 1b       	sub	r24, r18
 60c:	93 0b       	sbc	r25, r19
 60e:	90 93 65 00 	sts	0x0065, r25
 612:	80 93 64 00 	sts	0x0064, r24
	if(save==0)
 616:	00 97       	sbiw	r24, 0x00	; 0
 618:	59 f4       	brne	.+22     	; 0x630 <__vector_3+0x54>
	{
		EEPROMWrite(EEPROMAddress, 9);
 61a:	80 91 62 00 	lds	r24, 0x0062
 61e:	90 91 63 00 	lds	r25, 0x0063
 622:	69 e0       	ldi	r22, 0x09	; 9
 624:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z11EEPROMWritejc>
		EEPROMAddress=0;
 628:	10 92 63 00 	sts	0x0063, r1
 62c:	10 92 62 00 	sts	0x0062, r1
	}
	GIFR|=(1<<INTF2);
 630:	8a b7       	in	r24, 0x3a	; 58
 632:	80 62       	ori	r24, 0x20	; 32
 634:	8a bf       	out	0x3a, r24	; 58
}
 636:	ff 91       	pop	r31
 638:	ef 91       	pop	r30
 63a:	bf 91       	pop	r27
 63c:	af 91       	pop	r26
 63e:	9f 91       	pop	r25
 640:	8f 91       	pop	r24
 642:	7f 91       	pop	r23
 644:	6f 91       	pop	r22
 646:	5f 91       	pop	r21
 648:	4f 91       	pop	r20
 64a:	3f 91       	pop	r19
 64c:	2f 91       	pop	r18
 64e:	0f 90       	pop	r0
 650:	0f be       	out	0x3f, r0	; 63
 652:	0f 90       	pop	r0
 654:	1f 90       	pop	r1
 656:	18 95       	reti

00000658 <_Z14playFromEEPROMv>:

void playFromEEPROM()
{
 658:	cf 93       	push	r28
 65a:	df 93       	push	r29
	int i=0;
 65c:	c0 e0       	ldi	r28, 0x00	; 0
 65e:	d0 e0       	ldi	r29, 0x00	; 0
	while(1)
	{
		char data=EEPROMRead(i);
 660:	ce 01       	movw	r24, r28
 662:	0e 94 84 02 	call	0x508	; 0x508 <_Z10EEPROMReadj>
		if(data==9) break;
 666:	89 30       	cpi	r24, 0x09	; 9
 668:	21 f0       	breq	.+8      	; 0x672 <_Z14playFromEEPROMv+0x1a>
		readNote(data);
 66a:	0e 94 8b 02 	call	0x516	; 0x516 <_Z8readNotec>
		i++;		
 66e:	21 96       	adiw	r28, 0x01	; 1
}

void playFromEEPROM()
{
	int i=0;
	while(1)
 670:	f7 cf       	rjmp	.-18     	; 0x660 <_Z14playFromEEPROMv+0x8>
		char data=EEPROMRead(i);
		if(data==9) break;
		readNote(data);
		i++;		
	}
}
 672:	df 91       	pop	r29
 674:	cf 91       	pop	r28
 676:	08 95       	ret

00000678 <__vector_1>:


ISR(INT0_vect){
 678:	1f 92       	push	r1
 67a:	0f 92       	push	r0
 67c:	0f b6       	in	r0, 0x3f	; 63
 67e:	0f 92       	push	r0
 680:	11 24       	eor	r1, r1
 682:	2f 93       	push	r18
 684:	3f 93       	push	r19
 686:	4f 93       	push	r20
 688:	5f 93       	push	r21
 68a:	6f 93       	push	r22
 68c:	7f 93       	push	r23
 68e:	8f 93       	push	r24
 690:	9f 93       	push	r25
 692:	af 93       	push	r26
 694:	bf 93       	push	r27
 696:	ef 93       	push	r30
 698:	ff 93       	push	r31
 69a:	8f e3       	ldi	r24, 0x3F	; 63
 69c:	9d e0       	ldi	r25, 0x0D	; 13
 69e:	a3 e0       	ldi	r26, 0x03	; 3
 6a0:	81 50       	subi	r24, 0x01	; 1
 6a2:	90 40       	sbci	r25, 0x00	; 0
 6a4:	a0 40       	sbci	r26, 0x00	; 0
 6a6:	e1 f7       	brne	.-8      	; 0x6a0 <__vector_1+0x28>
 6a8:	00 c0       	rjmp	.+0      	; 0x6aa <__vector_1+0x32>
 6aa:	00 00       	nop
	_delay_ms(1000);
	playFromEEPROM();
 6ac:	0e 94 2c 03 	call	0x658	; 0x658 <_Z14playFromEEPROMv>
	GIFR|=(1<<INTF0);
 6b0:	8a b7       	in	r24, 0x3a	; 58
 6b2:	80 64       	ori	r24, 0x40	; 64
 6b4:	8a bf       	out	0x3a, r24	; 58
}
 6b6:	ff 91       	pop	r31
 6b8:	ef 91       	pop	r30
 6ba:	bf 91       	pop	r27
 6bc:	af 91       	pop	r26
 6be:	9f 91       	pop	r25
 6c0:	8f 91       	pop	r24
 6c2:	7f 91       	pop	r23
 6c4:	6f 91       	pop	r22
 6c6:	5f 91       	pop	r21
 6c8:	4f 91       	pop	r20
 6ca:	3f 91       	pop	r19
 6cc:	2f 91       	pop	r18
 6ce:	0f 90       	pop	r0
 6d0:	0f be       	out	0x3f, r0	; 63
 6d2:	0f 90       	pop	r0
 6d4:	1f 90       	pop	r1
 6d6:	18 95       	reti

000006d8 <main>:


int main(void)
{
	DDRB=0b00000001;
 6d8:	81 e0       	ldi	r24, 0x01	; 1
 6da:	87 bb       	out	0x17, r24	; 23
	GICR |= (1<<INT2);
 6dc:	8b b7       	in	r24, 0x3b	; 59
 6de:	80 62       	ori	r24, 0x20	; 32
 6e0:	8b bf       	out	0x3b, r24	; 59
	GICR |= (1<<INT0);
 6e2:	8b b7       	in	r24, 0x3b	; 59
 6e4:	80 64       	ori	r24, 0x40	; 64
 6e6:	8b bf       	out	0x3b, r24	; 59
	MCUCR |= 3; 
 6e8:	85 b7       	in	r24, 0x35	; 53
 6ea:	83 60       	ori	r24, 0x03	; 3
 6ec:	85 bf       	out	0x35, r24	; 53
	MCUCSR |= (1<<ISC2);
 6ee:	84 b7       	in	r24, 0x34	; 52
 6f0:	80 64       	ori	r24, 0x40	; 64
 6f2:	84 bf       	out	0x34, r24	; 52
	DDRA=0x00;
 6f4:	1a ba       	out	0x1a, r1	; 26
	DDRC = 0xFF;
 6f6:	8f ef       	ldi	r24, 0xFF	; 255
 6f8:	84 bb       	out	0x14, r24	; 20
	MCUCSR |= (1<<JTD);
 6fa:	94 b7       	in	r25, 0x34	; 52
 6fc:	90 68       	ori	r25, 0x80	; 128
 6fe:	94 bf       	out	0x34, r25	; 52
	MCUCSR |= (1<<JTD);
 700:	94 b7       	in	r25, 0x34	; 52
 702:	90 68       	ori	r25, 0x80	; 128
 704:	94 bf       	out	0x34, r25	; 52
	PORTC = 0xFF;
 706:	85 bb       	out	0x15, r24	; 21
	ADMUX=0b00100000;
 708:	80 e2       	ldi	r24, 0x20	; 32
 70a:	87 b9       	out	0x07, r24	; 7
	ADCSRA=0b10000000;
 70c:	80 e8       	ldi	r24, 0x80	; 128
 70e:	86 b9       	out	0x06, r24	; 6
	//EEPROMClear();
	sei();
 710:	78 94       	sei
					EEPROMWrite(EEPROMAddress++, 14);
				}
				Ti_();
			}
		}
	PORTC = 0b11111111;
 712:	cf ef       	ldi	r28, 0xFF	; 255
	sei();
	
	
    while(1)
    {
		ADCSRA|=(1<<ADSC);
 714:	36 9a       	sbi	0x06, 6	; 6
		while(ADCSRA&(1<<ADSC)){;}
 716:	36 99       	sbic	0x06, 6	; 6
 718:	fe cf       	rjmp	.-4      	; 0x716 <main+0x3e>
		int result=ADCH;
 71a:	65 b1       	in	r22, 0x05	; 5
		double y=(result/256.0)*3.17;
		unsigned char a=PINA;
 71c:	19 b3       	in	r17, 0x19	; 25
		unsigned char b=PIND;
 71e:	00 b3       	in	r16, 0x10	; 16
		if((a&1) || (y>1.1))
 720:	10 fd       	sbrc	r17, 0
 722:	19 c0       	rjmp	.+50     	; 0x756 <main+0x7e>
    while(1)
    {
		ADCSRA|=(1<<ADSC);
		while(ADCSRA&(1<<ADSC)){;}
		int result=ADCH;
		double y=(result/256.0)*3.17;
 724:	70 e0       	ldi	r23, 0x00	; 0
 726:	80 e0       	ldi	r24, 0x00	; 0
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	0e 94 8a 05 	call	0xb14	; 0xb14 <__floatsisf>
 72e:	20 e0       	ldi	r18, 0x00	; 0
 730:	30 e0       	ldi	r19, 0x00	; 0
 732:	40 e8       	ldi	r20, 0x80	; 128
 734:	5b e3       	ldi	r21, 0x3B	; 59
 736:	0e 94 1a 06 	call	0xc34	; 0xc34 <__mulsf3>
 73a:	28 e4       	ldi	r18, 0x48	; 72
 73c:	31 ee       	ldi	r19, 0xE1	; 225
 73e:	4a e4       	ldi	r20, 0x4A	; 74
 740:	50 e4       	ldi	r21, 0x40	; 64
 742:	0e 94 1a 06 	call	0xc34	; 0xc34 <__mulsf3>
		unsigned char a=PINA;
		unsigned char b=PIND;
		if((a&1) || (y>1.1))
 746:	2d ec       	ldi	r18, 0xCD	; 205
 748:	3c ec       	ldi	r19, 0xCC	; 204
 74a:	4c e8       	ldi	r20, 0x8C	; 140
 74c:	5f e3       	ldi	r21, 0x3F	; 63
 74e:	0e 94 16 06 	call	0xc2c	; 0xc2c <__gesf2>
 752:	18 16       	cp	r1, r24
 754:	bc f4       	brge	.+46     	; 0x784 <main+0xac>
		{
			if(save)
 756:	80 91 64 00 	lds	r24, 0x0064
 75a:	90 91 65 00 	lds	r25, 0x0065
 75e:	00 97       	sbiw	r24, 0x00	; 0
 760:	71 f0       	breq	.+28     	; 0x77e <main+0xa6>
			{
				EEPROMWrite(EEPROMAddress++, 1);
 762:	80 91 62 00 	lds	r24, 0x0062
 766:	90 91 63 00 	lds	r25, 0x0063
 76a:	9c 01       	movw	r18, r24
 76c:	2f 5f       	subi	r18, 0xFF	; 255
 76e:	3f 4f       	sbci	r19, 0xFF	; 255
 770:	30 93 63 00 	sts	0x0063, r19
 774:	20 93 62 00 	sts	0x0062, r18
 778:	61 e0       	ldi	r22, 0x01	; 1
 77a:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z11EEPROMWritejc>
			}
			Do();
 77e:	0e 94 49 00 	call	0x92	; 0x92 <_Z2Dov>
 782:	2b c1       	rjmp	.+598    	; 0x9da <__stack+0x17b>
		}
		else
		{
			if(a&(1<<1))
 784:	11 ff       	sbrs	r17, 1
 786:	17 c0       	rjmp	.+46     	; 0x7b6 <main+0xde>
			{
				if(save)
 788:	80 91 64 00 	lds	r24, 0x0064
 78c:	90 91 65 00 	lds	r25, 0x0065
 790:	00 97       	sbiw	r24, 0x00	; 0
 792:	71 f0       	breq	.+28     	; 0x7b0 <main+0xd8>
				{
					EEPROMWrite(EEPROMAddress++, 2);
 794:	80 91 62 00 	lds	r24, 0x0062
 798:	90 91 63 00 	lds	r25, 0x0063
 79c:	9c 01       	movw	r18, r24
 79e:	2f 5f       	subi	r18, 0xFF	; 255
 7a0:	3f 4f       	sbci	r19, 0xFF	; 255
 7a2:	30 93 63 00 	sts	0x0063, r19
 7a6:	20 93 62 00 	sts	0x0062, r18
 7aa:	62 e0       	ldi	r22, 0x02	; 2
 7ac:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z11EEPROMWritejc>
				}
				Re();
 7b0:	0e 94 a1 00 	call	0x142	; 0x142 <_Z2Rev>
 7b4:	12 c1       	rjmp	.+548    	; 0x9da <__stack+0x17b>
			}
			else if(a&(1<<2))
 7b6:	12 ff       	sbrs	r17, 2
 7b8:	17 c0       	rjmp	.+46     	; 0x7e8 <main+0x110>
			{
				if(save)
 7ba:	80 91 64 00 	lds	r24, 0x0064
 7be:	90 91 65 00 	lds	r25, 0x0065
 7c2:	00 97       	sbiw	r24, 0x00	; 0
 7c4:	71 f0       	breq	.+28     	; 0x7e2 <main+0x10a>
				{
					EEPROMWrite(EEPROMAddress++, 3);
 7c6:	80 91 62 00 	lds	r24, 0x0062
 7ca:	90 91 63 00 	lds	r25, 0x0063
 7ce:	9c 01       	movw	r18, r24
 7d0:	2f 5f       	subi	r18, 0xFF	; 255
 7d2:	3f 4f       	sbci	r19, 0xFF	; 255
 7d4:	30 93 63 00 	sts	0x0063, r19
 7d8:	20 93 62 00 	sts	0x0062, r18
 7dc:	63 e0       	ldi	r22, 0x03	; 3
 7de:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z11EEPROMWritejc>
				}
				Mi();
 7e2:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <_Z2Miv>
 7e6:	f9 c0       	rjmp	.+498    	; 0x9da <__stack+0x17b>
			}
			else if(a&(1<<3))
 7e8:	13 ff       	sbrs	r17, 3
 7ea:	17 c0       	rjmp	.+46     	; 0x81a <main+0x142>
			{
				if(save)
 7ec:	80 91 64 00 	lds	r24, 0x0064
 7f0:	90 91 65 00 	lds	r25, 0x0065
 7f4:	00 97       	sbiw	r24, 0x00	; 0
 7f6:	71 f0       	breq	.+28     	; 0x814 <main+0x13c>
				{
					EEPROMWrite(EEPROMAddress++, 4);
 7f8:	80 91 62 00 	lds	r24, 0x0062
 7fc:	90 91 63 00 	lds	r25, 0x0063
 800:	9c 01       	movw	r18, r24
 802:	2f 5f       	subi	r18, 0xFF	; 255
 804:	3f 4f       	sbci	r19, 0xFF	; 255
 806:	30 93 63 00 	sts	0x0063, r19
 80a:	20 93 62 00 	sts	0x0062, r18
 80e:	64 e0       	ldi	r22, 0x04	; 4
 810:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z11EEPROMWritejc>
				}
				Fa();
 814:	0e 94 4f 01 	call	0x29e	; 0x29e <_Z2Fav>
 818:	e0 c0       	rjmp	.+448    	; 0x9da <__stack+0x17b>
			}
			else if(a&(1<<4))
 81a:	14 ff       	sbrs	r17, 4
 81c:	17 c0       	rjmp	.+46     	; 0x84c <main+0x174>
			{
				if(save)
 81e:	80 91 64 00 	lds	r24, 0x0064
 822:	90 91 65 00 	lds	r25, 0x0065
 826:	00 97       	sbiw	r24, 0x00	; 0
 828:	71 f0       	breq	.+28     	; 0x846 <main+0x16e>
				{
					EEPROMWrite(EEPROMAddress++, 5);
 82a:	80 91 62 00 	lds	r24, 0x0062
 82e:	90 91 63 00 	lds	r25, 0x0063
 832:	9c 01       	movw	r18, r24
 834:	2f 5f       	subi	r18, 0xFF	; 255
 836:	3f 4f       	sbci	r19, 0xFF	; 255
 838:	30 93 63 00 	sts	0x0063, r19
 83c:	20 93 62 00 	sts	0x0062, r18
 840:	65 e0       	ldi	r22, 0x05	; 5
 842:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z11EEPROMWritejc>
				}
				So();
 846:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <_Z2Sov>
 84a:	c7 c0       	rjmp	.+398    	; 0x9da <__stack+0x17b>
			}
			else if(a&(1<<5))
 84c:	15 ff       	sbrs	r17, 5
 84e:	17 c0       	rjmp	.+46     	; 0x87e <__stack+0x1f>
			{
				if(save)
 850:	80 91 64 00 	lds	r24, 0x0064
 854:	90 91 65 00 	lds	r25, 0x0065
 858:	00 97       	sbiw	r24, 0x00	; 0
 85a:	71 f0       	breq	.+28     	; 0x878 <__stack+0x19>
				{
					EEPROMWrite(EEPROMAddress++, 6);
 85c:	80 91 62 00 	lds	r24, 0x0062
 860:	90 91 63 00 	lds	r25, 0x0063
 864:	9c 01       	movw	r18, r24
 866:	2f 5f       	subi	r18, 0xFF	; 255
 868:	3f 4f       	sbci	r19, 0xFF	; 255
 86a:	30 93 63 00 	sts	0x0063, r19
 86e:	20 93 62 00 	sts	0x0062, r18
 872:	66 e0       	ldi	r22, 0x06	; 6
 874:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z11EEPROMWritejc>
				}
				La();
 878:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <_Z2Lav>
 87c:	ae c0       	rjmp	.+348    	; 0x9da <__stack+0x17b>
			}
			else if(a&(1<<6))
 87e:	16 ff       	sbrs	r17, 6
 880:	17 c0       	rjmp	.+46     	; 0x8b0 <__stack+0x51>
			{
				if(save)
 882:	80 91 64 00 	lds	r24, 0x0064
 886:	90 91 65 00 	lds	r25, 0x0065
 88a:	00 97       	sbiw	r24, 0x00	; 0
 88c:	71 f0       	breq	.+28     	; 0x8aa <__stack+0x4b>
				{
					EEPROMWrite(EEPROMAddress++, 7);
 88e:	80 91 62 00 	lds	r24, 0x0062
 892:	90 91 63 00 	lds	r25, 0x0063
 896:	9c 01       	movw	r18, r24
 898:	2f 5f       	subi	r18, 0xFF	; 255
 89a:	3f 4f       	sbci	r19, 0xFF	; 255
 89c:	30 93 63 00 	sts	0x0063, r19
 8a0:	20 93 62 00 	sts	0x0062, r18
 8a4:	67 e0       	ldi	r22, 0x07	; 7
 8a6:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z11EEPROMWritejc>
				}
				Ti();
 8aa:	0e 94 26 02 	call	0x44c	; 0x44c <_Z2Tiv>
 8ae:	95 c0       	rjmp	.+298    	; 0x9da <__stack+0x17b>
			}
			else if(a&(1<<7))
 8b0:	11 23       	and	r17, r17
 8b2:	bc f4       	brge	.+46     	; 0x8e2 <__stack+0x83>
			{
				if(save)
 8b4:	80 91 64 00 	lds	r24, 0x0064
 8b8:	90 91 65 00 	lds	r25, 0x0065
 8bc:	00 97       	sbiw	r24, 0x00	; 0
 8be:	71 f0       	breq	.+28     	; 0x8dc <__stack+0x7d>
				{
					EEPROMWrite(EEPROMAddress++, 8);
 8c0:	80 91 62 00 	lds	r24, 0x0062
 8c4:	90 91 63 00 	lds	r25, 0x0063
 8c8:	9c 01       	movw	r18, r24
 8ca:	2f 5f       	subi	r18, 0xFF	; 255
 8cc:	3f 4f       	sbci	r19, 0xFF	; 255
 8ce:	30 93 63 00 	sts	0x0063, r19
 8d2:	20 93 62 00 	sts	0x0062, r18
 8d6:	68 e0       	ldi	r22, 0x08	; 8
 8d8:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z11EEPROMWritejc>
				}
				DoHigh();
 8dc:	0e 94 51 02 	call	0x4a2	; 0x4a2 <_Z6DoHighv>
 8e0:	7c c0       	rjmp	.+248    	; 0x9da <__stack+0x17b>
			}
			else if(b&(1<<3))
 8e2:	03 ff       	sbrs	r16, 3
 8e4:	17 c0       	rjmp	.+46     	; 0x914 <__stack+0xb5>
			{
				if(save)
 8e6:	80 91 64 00 	lds	r24, 0x0064
 8ea:	90 91 65 00 	lds	r25, 0x0065
 8ee:	00 97       	sbiw	r24, 0x00	; 0
 8f0:	71 f0       	breq	.+28     	; 0x90e <__stack+0xaf>
				{
					EEPROMWrite(EEPROMAddress++, 10);
 8f2:	80 91 62 00 	lds	r24, 0x0062
 8f6:	90 91 63 00 	lds	r25, 0x0063
 8fa:	9c 01       	movw	r18, r24
 8fc:	2f 5f       	subi	r18, 0xFF	; 255
 8fe:	3f 4f       	sbci	r19, 0xFF	; 255
 900:	30 93 63 00 	sts	0x0063, r19
 904:	20 93 62 00 	sts	0x0062, r18
 908:	6a e0       	ldi	r22, 0x0A	; 10
 90a:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z11EEPROMWritejc>
				}
				Re_();
 90e:	0e 94 76 00 	call	0xec	; 0xec <_Z3Re_v>
 912:	63 c0       	rjmp	.+198    	; 0x9da <__stack+0x17b>
			}
			else if (b&(1<<4))
 914:	04 ff       	sbrs	r16, 4
 916:	17 c0       	rjmp	.+46     	; 0x946 <__stack+0xe7>
			{
				if(save)
 918:	80 91 64 00 	lds	r24, 0x0064
 91c:	90 91 65 00 	lds	r25, 0x0065
 920:	00 97       	sbiw	r24, 0x00	; 0
 922:	71 f0       	breq	.+28     	; 0x940 <__stack+0xe1>
				{
					EEPROMWrite(EEPROMAddress++, 11);
 924:	80 91 62 00 	lds	r24, 0x0062
 928:	90 91 63 00 	lds	r25, 0x0063
 92c:	9c 01       	movw	r18, r24
 92e:	2f 5f       	subi	r18, 0xFF	; 255
 930:	3f 4f       	sbci	r19, 0xFF	; 255
 932:	30 93 63 00 	sts	0x0063, r19
 936:	20 93 62 00 	sts	0x0062, r18
 93a:	6b e0       	ldi	r22, 0x0B	; 11
 93c:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z11EEPROMWritejc>
				}
				Mi_();
 940:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z3Mi_v>
 944:	4a c0       	rjmp	.+148    	; 0x9da <__stack+0x17b>
			}
			else if (b&(1<<5))
 946:	05 ff       	sbrs	r16, 5
 948:	17 c0       	rjmp	.+46     	; 0x978 <__stack+0x119>
			{
				if(save)
 94a:	80 91 64 00 	lds	r24, 0x0064
 94e:	90 91 65 00 	lds	r25, 0x0065
 952:	00 97       	sbiw	r24, 0x00	; 0
 954:	71 f0       	breq	.+28     	; 0x972 <__stack+0x113>
				{
					EEPROMWrite(EEPROMAddress++, 12);
 956:	80 91 62 00 	lds	r24, 0x0062
 95a:	90 91 63 00 	lds	r25, 0x0063
 95e:	9c 01       	movw	r18, r24
 960:	2f 5f       	subi	r18, 0xFF	; 255
 962:	3f 4f       	sbci	r19, 0xFF	; 255
 964:	30 93 63 00 	sts	0x0063, r19
 968:	20 93 62 00 	sts	0x0062, r18
 96c:	6c e0       	ldi	r22, 0x0C	; 12
 96e:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z11EEPROMWritejc>
				}
				Fa_();
 972:	0e 94 26 01 	call	0x24c	; 0x24c <_Z3Fa_v>
 976:	31 c0       	rjmp	.+98     	; 0x9da <__stack+0x17b>
			}
			else if (b&(1<<6))
 978:	06 ff       	sbrs	r16, 6
 97a:	17 c0       	rjmp	.+46     	; 0x9aa <__stack+0x14b>
			{
				if(save)
 97c:	80 91 64 00 	lds	r24, 0x0064
 980:	90 91 65 00 	lds	r25, 0x0065
 984:	00 97       	sbiw	r24, 0x00	; 0
 986:	71 f0       	breq	.+28     	; 0x9a4 <__stack+0x145>
				{
					EEPROMWrite(EEPROMAddress++, 13);
 988:	80 91 62 00 	lds	r24, 0x0062
 98c:	90 91 63 00 	lds	r25, 0x0063
 990:	9c 01       	movw	r18, r24
 992:	2f 5f       	subi	r18, 0xFF	; 255
 994:	3f 4f       	sbci	r19, 0xFF	; 255
 996:	30 93 63 00 	sts	0x0063, r19
 99a:	20 93 62 00 	sts	0x0062, r18
 99e:	6d e0       	ldi	r22, 0x0D	; 13
 9a0:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z11EEPROMWritejc>
				}
				La_();
 9a4:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z3La_v>
 9a8:	18 c0       	rjmp	.+48     	; 0x9da <__stack+0x17b>
			}
			else if(b&(1<<7))
 9aa:	00 23       	and	r16, r16
 9ac:	b4 f4       	brge	.+44     	; 0x9da <__stack+0x17b>
			{
				if(save)
 9ae:	80 91 64 00 	lds	r24, 0x0064
 9b2:	90 91 65 00 	lds	r25, 0x0065
 9b6:	00 97       	sbiw	r24, 0x00	; 0
 9b8:	71 f0       	breq	.+28     	; 0x9d6 <__stack+0x177>
				{
					EEPROMWrite(EEPROMAddress++, 14);
 9ba:	80 91 62 00 	lds	r24, 0x0062
 9be:	90 91 63 00 	lds	r25, 0x0063
 9c2:	9c 01       	movw	r18, r24
 9c4:	2f 5f       	subi	r18, 0xFF	; 255
 9c6:	3f 4f       	sbci	r19, 0xFF	; 255
 9c8:	30 93 63 00 	sts	0x0063, r19
 9cc:	20 93 62 00 	sts	0x0062, r18
 9d0:	6e e0       	ldi	r22, 0x0E	; 14
 9d2:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z11EEPROMWritejc>
				}
				Ti_();
 9d6:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z3Ti_v>
			}
		}
	PORTC = 0b11111111;
 9da:	c5 bb       	out	0x15, r28	; 21
	ADCSRA=0b10000000;
	//EEPROMClear();
	sei();
	
	
    while(1)
 9dc:	9b ce       	rjmp	.-714    	; 0x714 <main+0x3c>

000009de <__divsf3>:
 9de:	0c d0       	rcall	.+24     	; 0x9f8 <__divsf3x>
 9e0:	eb c0       	rjmp	.+470    	; 0xbb8 <__fp_round>
 9e2:	e3 d0       	rcall	.+454    	; 0xbaa <__fp_pscB>
 9e4:	40 f0       	brcs	.+16     	; 0x9f6 <__divsf3+0x18>
 9e6:	da d0       	rcall	.+436    	; 0xb9c <__fp_pscA>
 9e8:	30 f0       	brcs	.+12     	; 0x9f6 <__divsf3+0x18>
 9ea:	21 f4       	brne	.+8      	; 0x9f4 <__divsf3+0x16>
 9ec:	5f 3f       	cpi	r21, 0xFF	; 255
 9ee:	19 f0       	breq	.+6      	; 0x9f6 <__divsf3+0x18>
 9f0:	cc c0       	rjmp	.+408    	; 0xb8a <__fp_inf>
 9f2:	51 11       	cpse	r21, r1
 9f4:	15 c1       	rjmp	.+554    	; 0xc20 <__fp_szero>
 9f6:	cf c0       	rjmp	.+414    	; 0xb96 <__fp_nan>

000009f8 <__divsf3x>:
 9f8:	f0 d0       	rcall	.+480    	; 0xbda <__fp_split3>
 9fa:	98 f3       	brcs	.-26     	; 0x9e2 <__divsf3+0x4>

000009fc <__divsf3_pse>:
 9fc:	99 23       	and	r25, r25
 9fe:	c9 f3       	breq	.-14     	; 0x9f2 <__divsf3+0x14>
 a00:	55 23       	and	r21, r21
 a02:	b1 f3       	breq	.-20     	; 0x9f0 <__divsf3+0x12>
 a04:	95 1b       	sub	r25, r21
 a06:	55 0b       	sbc	r21, r21
 a08:	bb 27       	eor	r27, r27
 a0a:	aa 27       	eor	r26, r26
 a0c:	62 17       	cp	r22, r18
 a0e:	73 07       	cpc	r23, r19
 a10:	84 07       	cpc	r24, r20
 a12:	38 f0       	brcs	.+14     	; 0xa22 <__divsf3_pse+0x26>
 a14:	9f 5f       	subi	r25, 0xFF	; 255
 a16:	5f 4f       	sbci	r21, 0xFF	; 255
 a18:	22 0f       	add	r18, r18
 a1a:	33 1f       	adc	r19, r19
 a1c:	44 1f       	adc	r20, r20
 a1e:	aa 1f       	adc	r26, r26
 a20:	a9 f3       	breq	.-22     	; 0xa0c <__divsf3_pse+0x10>
 a22:	33 d0       	rcall	.+102    	; 0xa8a <__divsf3_pse+0x8e>
 a24:	0e 2e       	mov	r0, r30
 a26:	3a f0       	brmi	.+14     	; 0xa36 <__divsf3_pse+0x3a>
 a28:	e0 e8       	ldi	r30, 0x80	; 128
 a2a:	30 d0       	rcall	.+96     	; 0xa8c <__divsf3_pse+0x90>
 a2c:	91 50       	subi	r25, 0x01	; 1
 a2e:	50 40       	sbci	r21, 0x00	; 0
 a30:	e6 95       	lsr	r30
 a32:	00 1c       	adc	r0, r0
 a34:	ca f7       	brpl	.-14     	; 0xa28 <__divsf3_pse+0x2c>
 a36:	29 d0       	rcall	.+82     	; 0xa8a <__divsf3_pse+0x8e>
 a38:	fe 2f       	mov	r31, r30
 a3a:	27 d0       	rcall	.+78     	; 0xa8a <__divsf3_pse+0x8e>
 a3c:	66 0f       	add	r22, r22
 a3e:	77 1f       	adc	r23, r23
 a40:	88 1f       	adc	r24, r24
 a42:	bb 1f       	adc	r27, r27
 a44:	26 17       	cp	r18, r22
 a46:	37 07       	cpc	r19, r23
 a48:	48 07       	cpc	r20, r24
 a4a:	ab 07       	cpc	r26, r27
 a4c:	b0 e8       	ldi	r27, 0x80	; 128
 a4e:	09 f0       	breq	.+2      	; 0xa52 <__divsf3_pse+0x56>
 a50:	bb 0b       	sbc	r27, r27
 a52:	80 2d       	mov	r24, r0
 a54:	bf 01       	movw	r22, r30
 a56:	ff 27       	eor	r31, r31
 a58:	93 58       	subi	r25, 0x83	; 131
 a5a:	5f 4f       	sbci	r21, 0xFF	; 255
 a5c:	2a f0       	brmi	.+10     	; 0xa68 <__divsf3_pse+0x6c>
 a5e:	9e 3f       	cpi	r25, 0xFE	; 254
 a60:	51 05       	cpc	r21, r1
 a62:	68 f0       	brcs	.+26     	; 0xa7e <__divsf3_pse+0x82>
 a64:	92 c0       	rjmp	.+292    	; 0xb8a <__fp_inf>
 a66:	dc c0       	rjmp	.+440    	; 0xc20 <__fp_szero>
 a68:	5f 3f       	cpi	r21, 0xFF	; 255
 a6a:	ec f3       	brlt	.-6      	; 0xa66 <__divsf3_pse+0x6a>
 a6c:	98 3e       	cpi	r25, 0xE8	; 232
 a6e:	dc f3       	brlt	.-10     	; 0xa66 <__divsf3_pse+0x6a>
 a70:	86 95       	lsr	r24
 a72:	77 95       	ror	r23
 a74:	67 95       	ror	r22
 a76:	b7 95       	ror	r27
 a78:	f7 95       	ror	r31
 a7a:	9f 5f       	subi	r25, 0xFF	; 255
 a7c:	c9 f7       	brne	.-14     	; 0xa70 <__divsf3_pse+0x74>
 a7e:	88 0f       	add	r24, r24
 a80:	91 1d       	adc	r25, r1
 a82:	96 95       	lsr	r25
 a84:	87 95       	ror	r24
 a86:	97 f9       	bld	r25, 7
 a88:	08 95       	ret
 a8a:	e1 e0       	ldi	r30, 0x01	; 1
 a8c:	66 0f       	add	r22, r22
 a8e:	77 1f       	adc	r23, r23
 a90:	88 1f       	adc	r24, r24
 a92:	bb 1f       	adc	r27, r27
 a94:	62 17       	cp	r22, r18
 a96:	73 07       	cpc	r23, r19
 a98:	84 07       	cpc	r24, r20
 a9a:	ba 07       	cpc	r27, r26
 a9c:	20 f0       	brcs	.+8      	; 0xaa6 <__divsf3_pse+0xaa>
 a9e:	62 1b       	sub	r22, r18
 aa0:	73 0b       	sbc	r23, r19
 aa2:	84 0b       	sbc	r24, r20
 aa4:	ba 0b       	sbc	r27, r26
 aa6:	ee 1f       	adc	r30, r30
 aa8:	88 f7       	brcc	.-30     	; 0xa8c <__divsf3_pse+0x90>
 aaa:	e0 95       	com	r30
 aac:	08 95       	ret

00000aae <__fixsfsi>:
 aae:	04 d0       	rcall	.+8      	; 0xab8 <__fixunssfsi>
 ab0:	68 94       	set
 ab2:	b1 11       	cpse	r27, r1
 ab4:	b5 c0       	rjmp	.+362    	; 0xc20 <__fp_szero>
 ab6:	08 95       	ret

00000ab8 <__fixunssfsi>:
 ab8:	98 d0       	rcall	.+304    	; 0xbea <__fp_splitA>
 aba:	88 f0       	brcs	.+34     	; 0xade <__fixunssfsi+0x26>
 abc:	9f 57       	subi	r25, 0x7F	; 127
 abe:	90 f0       	brcs	.+36     	; 0xae4 <__fixunssfsi+0x2c>
 ac0:	b9 2f       	mov	r27, r25
 ac2:	99 27       	eor	r25, r25
 ac4:	b7 51       	subi	r27, 0x17	; 23
 ac6:	a0 f0       	brcs	.+40     	; 0xaf0 <__fixunssfsi+0x38>
 ac8:	d1 f0       	breq	.+52     	; 0xafe <__fixunssfsi+0x46>
 aca:	66 0f       	add	r22, r22
 acc:	77 1f       	adc	r23, r23
 ace:	88 1f       	adc	r24, r24
 ad0:	99 1f       	adc	r25, r25
 ad2:	1a f0       	brmi	.+6      	; 0xada <__fixunssfsi+0x22>
 ad4:	ba 95       	dec	r27
 ad6:	c9 f7       	brne	.-14     	; 0xaca <__fixunssfsi+0x12>
 ad8:	12 c0       	rjmp	.+36     	; 0xafe <__fixunssfsi+0x46>
 ada:	b1 30       	cpi	r27, 0x01	; 1
 adc:	81 f0       	breq	.+32     	; 0xafe <__fixunssfsi+0x46>
 ade:	9f d0       	rcall	.+318    	; 0xc1e <__fp_zero>
 ae0:	b1 e0       	ldi	r27, 0x01	; 1
 ae2:	08 95       	ret
 ae4:	9c c0       	rjmp	.+312    	; 0xc1e <__fp_zero>
 ae6:	67 2f       	mov	r22, r23
 ae8:	78 2f       	mov	r23, r24
 aea:	88 27       	eor	r24, r24
 aec:	b8 5f       	subi	r27, 0xF8	; 248
 aee:	39 f0       	breq	.+14     	; 0xafe <__fixunssfsi+0x46>
 af0:	b9 3f       	cpi	r27, 0xF9	; 249
 af2:	cc f3       	brlt	.-14     	; 0xae6 <__fixunssfsi+0x2e>
 af4:	86 95       	lsr	r24
 af6:	77 95       	ror	r23
 af8:	67 95       	ror	r22
 afa:	b3 95       	inc	r27
 afc:	d9 f7       	brne	.-10     	; 0xaf4 <__fixunssfsi+0x3c>
 afe:	3e f4       	brtc	.+14     	; 0xb0e <__fixunssfsi+0x56>
 b00:	90 95       	com	r25
 b02:	80 95       	com	r24
 b04:	70 95       	com	r23
 b06:	61 95       	neg	r22
 b08:	7f 4f       	sbci	r23, 0xFF	; 255
 b0a:	8f 4f       	sbci	r24, 0xFF	; 255
 b0c:	9f 4f       	sbci	r25, 0xFF	; 255
 b0e:	08 95       	ret

00000b10 <__floatunsisf>:
 b10:	e8 94       	clt
 b12:	09 c0       	rjmp	.+18     	; 0xb26 <__floatsisf+0x12>

00000b14 <__floatsisf>:
 b14:	97 fb       	bst	r25, 7
 b16:	3e f4       	brtc	.+14     	; 0xb26 <__floatsisf+0x12>
 b18:	90 95       	com	r25
 b1a:	80 95       	com	r24
 b1c:	70 95       	com	r23
 b1e:	61 95       	neg	r22
 b20:	7f 4f       	sbci	r23, 0xFF	; 255
 b22:	8f 4f       	sbci	r24, 0xFF	; 255
 b24:	9f 4f       	sbci	r25, 0xFF	; 255
 b26:	99 23       	and	r25, r25
 b28:	a9 f0       	breq	.+42     	; 0xb54 <__floatsisf+0x40>
 b2a:	f9 2f       	mov	r31, r25
 b2c:	96 e9       	ldi	r25, 0x96	; 150
 b2e:	bb 27       	eor	r27, r27
 b30:	93 95       	inc	r25
 b32:	f6 95       	lsr	r31
 b34:	87 95       	ror	r24
 b36:	77 95       	ror	r23
 b38:	67 95       	ror	r22
 b3a:	b7 95       	ror	r27
 b3c:	f1 11       	cpse	r31, r1
 b3e:	f8 cf       	rjmp	.-16     	; 0xb30 <__floatsisf+0x1c>
 b40:	fa f4       	brpl	.+62     	; 0xb80 <__floatsisf+0x6c>
 b42:	bb 0f       	add	r27, r27
 b44:	11 f4       	brne	.+4      	; 0xb4a <__floatsisf+0x36>
 b46:	60 ff       	sbrs	r22, 0
 b48:	1b c0       	rjmp	.+54     	; 0xb80 <__floatsisf+0x6c>
 b4a:	6f 5f       	subi	r22, 0xFF	; 255
 b4c:	7f 4f       	sbci	r23, 0xFF	; 255
 b4e:	8f 4f       	sbci	r24, 0xFF	; 255
 b50:	9f 4f       	sbci	r25, 0xFF	; 255
 b52:	16 c0       	rjmp	.+44     	; 0xb80 <__floatsisf+0x6c>
 b54:	88 23       	and	r24, r24
 b56:	11 f0       	breq	.+4      	; 0xb5c <__floatsisf+0x48>
 b58:	96 e9       	ldi	r25, 0x96	; 150
 b5a:	11 c0       	rjmp	.+34     	; 0xb7e <__floatsisf+0x6a>
 b5c:	77 23       	and	r23, r23
 b5e:	21 f0       	breq	.+8      	; 0xb68 <__floatsisf+0x54>
 b60:	9e e8       	ldi	r25, 0x8E	; 142
 b62:	87 2f       	mov	r24, r23
 b64:	76 2f       	mov	r23, r22
 b66:	05 c0       	rjmp	.+10     	; 0xb72 <__floatsisf+0x5e>
 b68:	66 23       	and	r22, r22
 b6a:	71 f0       	breq	.+28     	; 0xb88 <__floatsisf+0x74>
 b6c:	96 e8       	ldi	r25, 0x86	; 134
 b6e:	86 2f       	mov	r24, r22
 b70:	70 e0       	ldi	r23, 0x00	; 0
 b72:	60 e0       	ldi	r22, 0x00	; 0
 b74:	2a f0       	brmi	.+10     	; 0xb80 <__floatsisf+0x6c>
 b76:	9a 95       	dec	r25
 b78:	66 0f       	add	r22, r22
 b7a:	77 1f       	adc	r23, r23
 b7c:	88 1f       	adc	r24, r24
 b7e:	da f7       	brpl	.-10     	; 0xb76 <__floatsisf+0x62>
 b80:	88 0f       	add	r24, r24
 b82:	96 95       	lsr	r25
 b84:	87 95       	ror	r24
 b86:	97 f9       	bld	r25, 7
 b88:	08 95       	ret

00000b8a <__fp_inf>:
 b8a:	97 f9       	bld	r25, 7
 b8c:	9f 67       	ori	r25, 0x7F	; 127
 b8e:	80 e8       	ldi	r24, 0x80	; 128
 b90:	70 e0       	ldi	r23, 0x00	; 0
 b92:	60 e0       	ldi	r22, 0x00	; 0
 b94:	08 95       	ret

00000b96 <__fp_nan>:
 b96:	9f ef       	ldi	r25, 0xFF	; 255
 b98:	80 ec       	ldi	r24, 0xC0	; 192
 b9a:	08 95       	ret

00000b9c <__fp_pscA>:
 b9c:	00 24       	eor	r0, r0
 b9e:	0a 94       	dec	r0
 ba0:	16 16       	cp	r1, r22
 ba2:	17 06       	cpc	r1, r23
 ba4:	18 06       	cpc	r1, r24
 ba6:	09 06       	cpc	r0, r25
 ba8:	08 95       	ret

00000baa <__fp_pscB>:
 baa:	00 24       	eor	r0, r0
 bac:	0a 94       	dec	r0
 bae:	12 16       	cp	r1, r18
 bb0:	13 06       	cpc	r1, r19
 bb2:	14 06       	cpc	r1, r20
 bb4:	05 06       	cpc	r0, r21
 bb6:	08 95       	ret

00000bb8 <__fp_round>:
 bb8:	09 2e       	mov	r0, r25
 bba:	03 94       	inc	r0
 bbc:	00 0c       	add	r0, r0
 bbe:	11 f4       	brne	.+4      	; 0xbc4 <__fp_round+0xc>
 bc0:	88 23       	and	r24, r24
 bc2:	52 f0       	brmi	.+20     	; 0xbd8 <__fp_round+0x20>
 bc4:	bb 0f       	add	r27, r27
 bc6:	40 f4       	brcc	.+16     	; 0xbd8 <__fp_round+0x20>
 bc8:	bf 2b       	or	r27, r31
 bca:	11 f4       	brne	.+4      	; 0xbd0 <__fp_round+0x18>
 bcc:	60 ff       	sbrs	r22, 0
 bce:	04 c0       	rjmp	.+8      	; 0xbd8 <__fp_round+0x20>
 bd0:	6f 5f       	subi	r22, 0xFF	; 255
 bd2:	7f 4f       	sbci	r23, 0xFF	; 255
 bd4:	8f 4f       	sbci	r24, 0xFF	; 255
 bd6:	9f 4f       	sbci	r25, 0xFF	; 255
 bd8:	08 95       	ret

00000bda <__fp_split3>:
 bda:	57 fd       	sbrc	r21, 7
 bdc:	90 58       	subi	r25, 0x80	; 128
 bde:	44 0f       	add	r20, r20
 be0:	55 1f       	adc	r21, r21
 be2:	59 f0       	breq	.+22     	; 0xbfa <__fp_splitA+0x10>
 be4:	5f 3f       	cpi	r21, 0xFF	; 255
 be6:	71 f0       	breq	.+28     	; 0xc04 <__fp_splitA+0x1a>
 be8:	47 95       	ror	r20

00000bea <__fp_splitA>:
 bea:	88 0f       	add	r24, r24
 bec:	97 fb       	bst	r25, 7
 bee:	99 1f       	adc	r25, r25
 bf0:	61 f0       	breq	.+24     	; 0xc0a <__fp_splitA+0x20>
 bf2:	9f 3f       	cpi	r25, 0xFF	; 255
 bf4:	79 f0       	breq	.+30     	; 0xc14 <__fp_splitA+0x2a>
 bf6:	87 95       	ror	r24
 bf8:	08 95       	ret
 bfa:	12 16       	cp	r1, r18
 bfc:	13 06       	cpc	r1, r19
 bfe:	14 06       	cpc	r1, r20
 c00:	55 1f       	adc	r21, r21
 c02:	f2 cf       	rjmp	.-28     	; 0xbe8 <__fp_split3+0xe>
 c04:	46 95       	lsr	r20
 c06:	f1 df       	rcall	.-30     	; 0xbea <__fp_splitA>
 c08:	08 c0       	rjmp	.+16     	; 0xc1a <__fp_splitA+0x30>
 c0a:	16 16       	cp	r1, r22
 c0c:	17 06       	cpc	r1, r23
 c0e:	18 06       	cpc	r1, r24
 c10:	99 1f       	adc	r25, r25
 c12:	f1 cf       	rjmp	.-30     	; 0xbf6 <__fp_splitA+0xc>
 c14:	86 95       	lsr	r24
 c16:	71 05       	cpc	r23, r1
 c18:	61 05       	cpc	r22, r1
 c1a:	08 94       	sec
 c1c:	08 95       	ret

00000c1e <__fp_zero>:
 c1e:	e8 94       	clt

00000c20 <__fp_szero>:
 c20:	bb 27       	eor	r27, r27
 c22:	66 27       	eor	r22, r22
 c24:	77 27       	eor	r23, r23
 c26:	cb 01       	movw	r24, r22
 c28:	97 f9       	bld	r25, 7
 c2a:	08 95       	ret

00000c2c <__gesf2>:
 c2c:	66 d0       	rcall	.+204    	; 0xcfa <__fp_cmp>
 c2e:	08 f4       	brcc	.+2      	; 0xc32 <__gesf2+0x6>
 c30:	8f ef       	ldi	r24, 0xFF	; 255
 c32:	08 95       	ret

00000c34 <__mulsf3>:
 c34:	0b d0       	rcall	.+22     	; 0xc4c <__mulsf3x>
 c36:	c0 cf       	rjmp	.-128    	; 0xbb8 <__fp_round>
 c38:	b1 df       	rcall	.-158    	; 0xb9c <__fp_pscA>
 c3a:	28 f0       	brcs	.+10     	; 0xc46 <__mulsf3+0x12>
 c3c:	b6 df       	rcall	.-148    	; 0xbaa <__fp_pscB>
 c3e:	18 f0       	brcs	.+6      	; 0xc46 <__mulsf3+0x12>
 c40:	95 23       	and	r25, r21
 c42:	09 f0       	breq	.+2      	; 0xc46 <__mulsf3+0x12>
 c44:	a2 cf       	rjmp	.-188    	; 0xb8a <__fp_inf>
 c46:	a7 cf       	rjmp	.-178    	; 0xb96 <__fp_nan>
 c48:	11 24       	eor	r1, r1
 c4a:	ea cf       	rjmp	.-44     	; 0xc20 <__fp_szero>

00000c4c <__mulsf3x>:
 c4c:	c6 df       	rcall	.-116    	; 0xbda <__fp_split3>
 c4e:	a0 f3       	brcs	.-24     	; 0xc38 <__mulsf3+0x4>

00000c50 <__mulsf3_pse>:
 c50:	95 9f       	mul	r25, r21
 c52:	d1 f3       	breq	.-12     	; 0xc48 <__mulsf3+0x14>
 c54:	95 0f       	add	r25, r21
 c56:	50 e0       	ldi	r21, 0x00	; 0
 c58:	55 1f       	adc	r21, r21
 c5a:	62 9f       	mul	r22, r18
 c5c:	f0 01       	movw	r30, r0
 c5e:	72 9f       	mul	r23, r18
 c60:	bb 27       	eor	r27, r27
 c62:	f0 0d       	add	r31, r0
 c64:	b1 1d       	adc	r27, r1
 c66:	63 9f       	mul	r22, r19
 c68:	aa 27       	eor	r26, r26
 c6a:	f0 0d       	add	r31, r0
 c6c:	b1 1d       	adc	r27, r1
 c6e:	aa 1f       	adc	r26, r26
 c70:	64 9f       	mul	r22, r20
 c72:	66 27       	eor	r22, r22
 c74:	b0 0d       	add	r27, r0
 c76:	a1 1d       	adc	r26, r1
 c78:	66 1f       	adc	r22, r22
 c7a:	82 9f       	mul	r24, r18
 c7c:	22 27       	eor	r18, r18
 c7e:	b0 0d       	add	r27, r0
 c80:	a1 1d       	adc	r26, r1
 c82:	62 1f       	adc	r22, r18
 c84:	73 9f       	mul	r23, r19
 c86:	b0 0d       	add	r27, r0
 c88:	a1 1d       	adc	r26, r1
 c8a:	62 1f       	adc	r22, r18
 c8c:	83 9f       	mul	r24, r19
 c8e:	a0 0d       	add	r26, r0
 c90:	61 1d       	adc	r22, r1
 c92:	22 1f       	adc	r18, r18
 c94:	74 9f       	mul	r23, r20
 c96:	33 27       	eor	r19, r19
 c98:	a0 0d       	add	r26, r0
 c9a:	61 1d       	adc	r22, r1
 c9c:	23 1f       	adc	r18, r19
 c9e:	84 9f       	mul	r24, r20
 ca0:	60 0d       	add	r22, r0
 ca2:	21 1d       	adc	r18, r1
 ca4:	82 2f       	mov	r24, r18
 ca6:	76 2f       	mov	r23, r22
 ca8:	6a 2f       	mov	r22, r26
 caa:	11 24       	eor	r1, r1
 cac:	9f 57       	subi	r25, 0x7F	; 127
 cae:	50 40       	sbci	r21, 0x00	; 0
 cb0:	8a f0       	brmi	.+34     	; 0xcd4 <__mulsf3_pse+0x84>
 cb2:	e1 f0       	breq	.+56     	; 0xcec <__mulsf3_pse+0x9c>
 cb4:	88 23       	and	r24, r24
 cb6:	4a f0       	brmi	.+18     	; 0xcca <__mulsf3_pse+0x7a>
 cb8:	ee 0f       	add	r30, r30
 cba:	ff 1f       	adc	r31, r31
 cbc:	bb 1f       	adc	r27, r27
 cbe:	66 1f       	adc	r22, r22
 cc0:	77 1f       	adc	r23, r23
 cc2:	88 1f       	adc	r24, r24
 cc4:	91 50       	subi	r25, 0x01	; 1
 cc6:	50 40       	sbci	r21, 0x00	; 0
 cc8:	a9 f7       	brne	.-22     	; 0xcb4 <__mulsf3_pse+0x64>
 cca:	9e 3f       	cpi	r25, 0xFE	; 254
 ccc:	51 05       	cpc	r21, r1
 cce:	70 f0       	brcs	.+28     	; 0xcec <__mulsf3_pse+0x9c>
 cd0:	5c cf       	rjmp	.-328    	; 0xb8a <__fp_inf>
 cd2:	a6 cf       	rjmp	.-180    	; 0xc20 <__fp_szero>
 cd4:	5f 3f       	cpi	r21, 0xFF	; 255
 cd6:	ec f3       	brlt	.-6      	; 0xcd2 <__mulsf3_pse+0x82>
 cd8:	98 3e       	cpi	r25, 0xE8	; 232
 cda:	dc f3       	brlt	.-10     	; 0xcd2 <__mulsf3_pse+0x82>
 cdc:	86 95       	lsr	r24
 cde:	77 95       	ror	r23
 ce0:	67 95       	ror	r22
 ce2:	b7 95       	ror	r27
 ce4:	f7 95       	ror	r31
 ce6:	e7 95       	ror	r30
 ce8:	9f 5f       	subi	r25, 0xFF	; 255
 cea:	c1 f7       	brne	.-16     	; 0xcdc <__mulsf3_pse+0x8c>
 cec:	fe 2b       	or	r31, r30
 cee:	88 0f       	add	r24, r24
 cf0:	91 1d       	adc	r25, r1
 cf2:	96 95       	lsr	r25
 cf4:	87 95       	ror	r24
 cf6:	97 f9       	bld	r25, 7
 cf8:	08 95       	ret

00000cfa <__fp_cmp>:
 cfa:	99 0f       	add	r25, r25
 cfc:	00 08       	sbc	r0, r0
 cfe:	55 0f       	add	r21, r21
 d00:	aa 0b       	sbc	r26, r26
 d02:	e0 e8       	ldi	r30, 0x80	; 128
 d04:	fe ef       	ldi	r31, 0xFE	; 254
 d06:	16 16       	cp	r1, r22
 d08:	17 06       	cpc	r1, r23
 d0a:	e8 07       	cpc	r30, r24
 d0c:	f9 07       	cpc	r31, r25
 d0e:	c0 f0       	brcs	.+48     	; 0xd40 <__fp_cmp+0x46>
 d10:	12 16       	cp	r1, r18
 d12:	13 06       	cpc	r1, r19
 d14:	e4 07       	cpc	r30, r20
 d16:	f5 07       	cpc	r31, r21
 d18:	98 f0       	brcs	.+38     	; 0xd40 <__fp_cmp+0x46>
 d1a:	62 1b       	sub	r22, r18
 d1c:	73 0b       	sbc	r23, r19
 d1e:	84 0b       	sbc	r24, r20
 d20:	95 0b       	sbc	r25, r21
 d22:	39 f4       	brne	.+14     	; 0xd32 <__fp_cmp+0x38>
 d24:	0a 26       	eor	r0, r26
 d26:	61 f0       	breq	.+24     	; 0xd40 <__fp_cmp+0x46>
 d28:	23 2b       	or	r18, r19
 d2a:	24 2b       	or	r18, r20
 d2c:	25 2b       	or	r18, r21
 d2e:	21 f4       	brne	.+8      	; 0xd38 <__fp_cmp+0x3e>
 d30:	08 95       	ret
 d32:	0a 26       	eor	r0, r26
 d34:	09 f4       	brne	.+2      	; 0xd38 <__fp_cmp+0x3e>
 d36:	a1 40       	sbci	r26, 0x01	; 1
 d38:	a6 95       	lsr	r26
 d3a:	8f ef       	ldi	r24, 0xFF	; 255
 d3c:	81 1d       	adc	r24, r1
 d3e:	81 1d       	adc	r24, r1
 d40:	08 95       	ret

00000d42 <_exit>:
 d42:	f8 94       	cli

00000d44 <__stop_program>:
 d44:	ff cf       	rjmp	.-2      	; 0xd44 <__stop_program>
