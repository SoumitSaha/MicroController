
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a6a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00000a6a  00000afe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800062  00800062  00000b00  2**0
                  ALLOC
  3 .stab         00001e84  00000000  00000000  00000b00  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000006a6  00000000  00000000  00002984  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000080  00000000  00000000  00003030  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cec  00000000  00000000  000030b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000024b  00000000  00000000  00003d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004ca  00000000  00000000  00003fe7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e4  00000000  00000000  000044b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000026d  00000000  00000000  00004698  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008c5  00000000  00000000  00004905  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 4c 02 	jmp	0x498	; 0x498 <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e6       	ldi	r30, 0x6A	; 106
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a2 e6       	ldi	r26, 0x62	; 98
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 36       	cpi	r26, 0x66	; 102
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <main>
  8a:	0c 94 33 05 	jmp	0xa66	; 0xa66 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z2Dov>:

void Do()
{
	float frequency=524;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
  92:	60 91 60 00 	lds	r22, 0x0060
  96:	70 91 61 00 	lds	r23, 0x0061
  9a:	88 27       	eor	r24, r24
  9c:	77 fd       	sbrc	r23, 7
  9e:	80 95       	com	r24
  a0:	98 2f       	mov	r25, r24
  a2:	0e 94 1c 04 	call	0x838	; 0x838 <__floatsisf>
  a6:	2a e5       	ldi	r18, 0x5A	; 90
  a8:	36 e4       	ldi	r19, 0x46	; 70
  aa:	44 ef       	ldi	r20, 0xF4	; 244
  ac:	5f e3       	ldi	r21, 0x3F	; 63
  ae:	0e 94 81 03 	call	0x702	; 0x702 <__divsf3>
  b2:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__fixsfsi>
	PORTC = 0b11111110;
  b6:	8e ef       	ldi	r24, 0xFE	; 254
  b8:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
  ba:	16 16       	cp	r1, r22
  bc:	17 06       	cpc	r1, r23
  be:	9c f4       	brge	.+38     	; 0xe6 <_Z2Dov+0x54>
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(0.95419);
		PORTB=1;
  c4:	21 e0       	ldi	r18, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c6:	ee ee       	ldi	r30, 0xEE	; 238
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	31 97       	sbiw	r30, 0x01	; 1
  cc:	f1 f7       	brne	.-4      	; 0xca <_Z2Dov+0x38>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <_Z2Dov+0x3e>
  d0:	28 bb       	out	0x18, r18	; 24
  d2:	ee ee       	ldi	r30, 0xEE	; 238
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	31 97       	sbiw	r30, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <_Z2Dov+0x44>
  da:	00 c0       	rjmp	.+0      	; 0xdc <_Z2Dov+0x4a>
		_delay_ms(0.95419);
		PORTB=0;
  dc:	18 ba       	out	0x18, r1	; 24
{
	float frequency=524;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
	PORTC = 0b11111110;
	for(int i=0; i<cycles; i++)
  de:	01 96       	adiw	r24, 0x01	; 1
  e0:	86 17       	cp	r24, r22
  e2:	97 07       	cpc	r25, r23
  e4:	81 f7       	brne	.-32     	; 0xc6 <_Z2Dov+0x34>
		_delay_ms(0.95419);
		PORTB=1;
		_delay_ms(0.95419);
		PORTB=0;
	}
	PORTC = 0b11111111;
  e6:	8f ef       	ldi	r24, 0xFF	; 255
  e8:	85 bb       	out	0x15, r24	; 21
}
  ea:	08 95       	ret

000000ec <_Z2Rev>:

void Re()
{
	float frequency=588.1701133;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
  ec:	60 91 60 00 	lds	r22, 0x0060
  f0:	70 91 61 00 	lds	r23, 0x0061
  f4:	88 27       	eor	r24, r24
  f6:	77 fd       	sbrc	r23, 7
  f8:	80 95       	com	r24
  fa:	98 2f       	mov	r25, r24
  fc:	0e 94 1c 04 	call	0x838	; 0x838 <__floatsisf>
 100:	26 ec       	ldi	r18, 0xC6	; 198
 102:	3f e9       	ldi	r19, 0x9F	; 159
 104:	49 ed       	ldi	r20, 0xD9	; 217
 106:	5f e3       	ldi	r21, 0x3F	; 63
 108:	0e 94 81 03 	call	0x702	; 0x702 <__divsf3>
 10c:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__fixsfsi>
	PORTC = 0b11111101;
 110:	8d ef       	ldi	r24, 0xFD	; 253
 112:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 114:	16 16       	cp	r1, r22
 116:	17 06       	cpc	r1, r23
 118:	9c f4       	brge	.+38     	; 0x140 <_Z2Rev+0x54>
 11a:	80 e0       	ldi	r24, 0x00	; 0
 11c:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(.850094);
		PORTB=1;
 11e:	21 e0       	ldi	r18, 0x01	; 1
 120:	e4 ed       	ldi	r30, 0xD4	; 212
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	31 97       	sbiw	r30, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <_Z2Rev+0x38>
 128:	00 c0       	rjmp	.+0      	; 0x12a <_Z2Rev+0x3e>
 12a:	28 bb       	out	0x18, r18	; 24
 12c:	e4 ed       	ldi	r30, 0xD4	; 212
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	31 97       	sbiw	r30, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <_Z2Rev+0x44>
 134:	00 c0       	rjmp	.+0      	; 0x136 <_Z2Rev+0x4a>
		_delay_ms(.850094);
		PORTB=0;
 136:	18 ba       	out	0x18, r1	; 24
{
	float frequency=588.1701133;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
	PORTC = 0b11111101;
	for(int i=0; i<cycles; i++)
 138:	01 96       	adiw	r24, 0x01	; 1
 13a:	86 17       	cp	r24, r22
 13c:	97 07       	cpc	r25, r23
 13e:	81 f7       	brne	.-32     	; 0x120 <_Z2Rev+0x34>
		_delay_ms(.850094);
		PORTB=1;
		_delay_ms(.850094);
		PORTB=0;
	}
	PORTC = 0b11111111;
 140:	8f ef       	ldi	r24, 0xFF	; 255
 142:	85 bb       	out	0x15, r24	; 21
}
 144:	08 95       	ret

00000146 <_Z2Miv>:

void Mi()
{
	float frequency=660.1986301;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
 146:	60 91 60 00 	lds	r22, 0x0060
 14a:	70 91 61 00 	lds	r23, 0x0061
 14e:	88 27       	eor	r24, r24
 150:	77 fd       	sbrc	r23, 7
 152:	80 95       	com	r24
 154:	98 2f       	mov	r25, r24
 156:	0e 94 1c 04 	call	0x838	; 0x838 <__floatsisf>
 15a:	2c e8       	ldi	r18, 0x8C	; 140
 15c:	31 ee       	ldi	r19, 0xE1	; 225
 15e:	41 ec       	ldi	r20, 0xC1	; 193
 160:	5f e3       	ldi	r21, 0x3F	; 63
 162:	0e 94 81 03 	call	0x702	; 0x702 <__divsf3>
 166:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__fixsfsi>
	PORTC = 0b11111011;
 16a:	8b ef       	ldi	r24, 0xFB	; 251
 16c:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 16e:	16 16       	cp	r1, r22
 170:	17 06       	cpc	r1, r23
 172:	8c f4       	brge	.+34     	; 0x196 <_Z2Miv+0x50>
 174:	80 e0       	ldi	r24, 0x00	; 0
 176:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(.75734);
		PORTB=1;
 178:	21 e0       	ldi	r18, 0x01	; 1
 17a:	3c ef       	ldi	r19, 0xFC	; 252
 17c:	3a 95       	dec	r19
 17e:	f1 f7       	brne	.-4      	; 0x17c <_Z2Miv+0x36>
 180:	00 c0       	rjmp	.+0      	; 0x182 <_Z2Miv+0x3c>
 182:	28 bb       	out	0x18, r18	; 24
 184:	3c ef       	ldi	r19, 0xFC	; 252
 186:	3a 95       	dec	r19
 188:	f1 f7       	brne	.-4      	; 0x186 <_Z2Miv+0x40>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <_Z2Miv+0x46>
		_delay_ms(.75734);
		PORTB=0;
 18c:	18 ba       	out	0x18, r1	; 24
{
	float frequency=660.1986301;
	float periodMS=(1/frequency)*1000;
	int cycles=durationMS/periodMS;
	PORTC = 0b11111011;
	for(int i=0; i<cycles; i++)
 18e:	01 96       	adiw	r24, 0x01	; 1
 190:	86 17       	cp	r24, r22
 192:	97 07       	cpc	r25, r23
 194:	91 f7       	brne	.-28     	; 0x17a <_Z2Miv+0x34>
		_delay_ms(.75734);
		PORTB=1;
		_delay_ms(.75734);
		PORTB=0;
	}
	PORTC = 0b11111111;
 196:	8f ef       	ldi	r24, 0xFF	; 255
 198:	85 bb       	out	0x15, r24	; 21
}
 19a:	08 95       	ret

0000019c <_Z2Fav>:
void Fa()
{
	float frequency=699.4560835;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
 19c:	60 91 60 00 	lds	r22, 0x0060
 1a0:	70 91 61 00 	lds	r23, 0x0061
 1a4:	88 27       	eor	r24, r24
 1a6:	77 fd       	sbrc	r23, 7
 1a8:	80 95       	com	r24
 1aa:	98 2f       	mov	r25, r24
 1ac:	0e 94 1c 04 	call	0x838	; 0x838 <__floatsisf>
 1b0:	25 ed       	ldi	r18, 0xD5	; 213
 1b2:	3f ef       	ldi	r19, 0xFF	; 255
 1b4:	46 eb       	ldi	r20, 0xB6	; 182
 1b6:	5f e3       	ldi	r21, 0x3F	; 63
 1b8:	0e 94 81 03 	call	0x702	; 0x702 <__divsf3>
 1bc:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__fixsfsi>
	PORTC = 0b11110111;
 1c0:	87 ef       	ldi	r24, 0xF7	; 247
 1c2:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 1c4:	16 16       	cp	r1, r22
 1c6:	17 06       	cpc	r1, r23
 1c8:	8c f4       	brge	.+34     	; 0x1ec <_Z2Fav+0x50>
 1ca:	80 e0       	ldi	r24, 0x00	; 0
 1cc:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(.71484);
		PORTB=1;
 1ce:	21 e0       	ldi	r18, 0x01	; 1
 1d0:	3e ee       	ldi	r19, 0xEE	; 238
 1d2:	3a 95       	dec	r19
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <_Z2Fav+0x36>
 1d6:	00 00       	nop
 1d8:	28 bb       	out	0x18, r18	; 24
 1da:	3e ee       	ldi	r19, 0xEE	; 238
 1dc:	3a 95       	dec	r19
 1de:	f1 f7       	brne	.-4      	; 0x1dc <_Z2Fav+0x40>
 1e0:	00 00       	nop
		_delay_ms(.71484);
		PORTB=0;
 1e2:	18 ba       	out	0x18, r1	; 24
	float frequency=699.4560835;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
	PORTC = 0b11110111;
	for(int i=0; i<cycles; i++)
 1e4:	01 96       	adiw	r24, 0x01	; 1
 1e6:	86 17       	cp	r24, r22
 1e8:	97 07       	cpc	r25, r23
 1ea:	91 f7       	brne	.-28     	; 0x1d0 <_Z2Fav+0x34>
		_delay_ms(.71484);
		PORTB=1;
		_delay_ms(.71484);
		PORTB=0;
	}
	PORTC = 0b11111111;
 1ec:	8f ef       	ldi	r24, 0xFF	; 255
 1ee:	85 bb       	out	0x15, r24	; 21
}
 1f0:	08 95       	ret

000001f2 <_Z2Sov>:
void So()
{
	float frequency=785.1129082;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
 1f2:	60 91 60 00 	lds	r22, 0x0060
 1f6:	70 91 61 00 	lds	r23, 0x0061
 1fa:	88 27       	eor	r24, r24
 1fc:	77 fd       	sbrc	r23, 7
 1fe:	80 95       	com	r24
 200:	98 2f       	mov	r25, r24
 202:	0e 94 1c 04 	call	0x838	; 0x838 <__floatsisf>
 206:	2c ea       	ldi	r18, 0xAC	; 172
 208:	38 e0       	ldi	r19, 0x08	; 8
 20a:	43 ea       	ldi	r20, 0xA3	; 163
 20c:	5f e3       	ldi	r21, 0x3F	; 63
 20e:	0e 94 81 03 	call	0x702	; 0x702 <__divsf3>
 212:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__fixsfsi>
	PORTC = 0b11101111;
 216:	8f ee       	ldi	r24, 0xEF	; 239
 218:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 21a:	16 16       	cp	r1, r22
 21c:	17 06       	cpc	r1, r23
 21e:	8c f4       	brge	.+34     	; 0x242 <_Z2Sov+0x50>
 220:	80 e0       	ldi	r24, 0x00	; 0
 222:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(0.63685);
		PORTB=1;
 224:	21 e0       	ldi	r18, 0x01	; 1
 226:	34 ed       	ldi	r19, 0xD4	; 212
 228:	3a 95       	dec	r19
 22a:	f1 f7       	brne	.-4      	; 0x228 <_Z2Sov+0x36>
 22c:	00 00       	nop
 22e:	28 bb       	out	0x18, r18	; 24
 230:	34 ed       	ldi	r19, 0xD4	; 212
 232:	3a 95       	dec	r19
 234:	f1 f7       	brne	.-4      	; 0x232 <_Z2Sov+0x40>
 236:	00 00       	nop
		_delay_ms(0.63685);
		PORTB=0;
 238:	18 ba       	out	0x18, r1	; 24
	float frequency=785.1129082;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
	PORTC = 0b11101111;
	for(int i=0; i<cycles; i++)
 23a:	01 96       	adiw	r24, 0x01	; 1
 23c:	86 17       	cp	r24, r22
 23e:	97 07       	cpc	r25, r23
 240:	91 f7       	brne	.-28     	; 0x226 <_Z2Sov+0x34>
		_delay_ms(0.63685);
		PORTB=1;
		_delay_ms(0.63685);
		PORTB=0;
	}
	PORTC = 0b11111111;
 242:	8f ef       	ldi	r24, 0xFF	; 255
 244:	85 bb       	out	0x15, r24	; 21
}
 246:	08 95       	ret

00000248 <_Z2Lav>:
void La()
{
	float frequency=881.2594431;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
 248:	60 91 60 00 	lds	r22, 0x0060
 24c:	70 91 61 00 	lds	r23, 0x0061
 250:	88 27       	eor	r24, r24
 252:	77 fd       	sbrc	r23, 7
 254:	80 95       	com	r24
 256:	98 2f       	mov	r25, r24
 258:	0e 94 1c 04 	call	0x838	; 0x838 <__floatsisf>
 25c:	26 e2       	ldi	r18, 0x26	; 38
 25e:	3f e3       	ldi	r19, 0x3F	; 63
 260:	41 e9       	ldi	r20, 0x91	; 145
 262:	5f e3       	ldi	r21, 0x3F	; 63
 264:	0e 94 81 03 	call	0x702	; 0x702 <__divsf3>
 268:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__fixsfsi>
	PORTC = 0b11011111;
 26c:	8f ed       	ldi	r24, 0xDF	; 223
 26e:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 270:	16 16       	cp	r1, r22
 272:	17 06       	cpc	r1, r23
 274:	8c f4       	brge	.+34     	; 0x298 <_Z2Lav+0x50>
 276:	80 e0       	ldi	r24, 0x00	; 0
 278:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(0.56736);
		PORTB=1;
 27a:	21 e0       	ldi	r18, 0x01	; 1
 27c:	3d eb       	ldi	r19, 0xBD	; 189
 27e:	3a 95       	dec	r19
 280:	f1 f7       	brne	.-4      	; 0x27e <_Z2Lav+0x36>
 282:	00 00       	nop
 284:	28 bb       	out	0x18, r18	; 24
 286:	3d eb       	ldi	r19, 0xBD	; 189
 288:	3a 95       	dec	r19
 28a:	f1 f7       	brne	.-4      	; 0x288 <_Z2Lav+0x40>
 28c:	00 00       	nop
		_delay_ms(0.56736);
		PORTB=0;
 28e:	18 ba       	out	0x18, r1	; 24
	float frequency=881.2594431;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
	PORTC = 0b11011111;
	for(int i=0; i<cycles; i++)
 290:	01 96       	adiw	r24, 0x01	; 1
 292:	86 17       	cp	r24, r22
 294:	97 07       	cpc	r25, r23
 296:	91 f7       	brne	.-28     	; 0x27c <_Z2Lav+0x34>
		_delay_ms(0.56736);
		PORTB=1;
		_delay_ms(0.56736);
		PORTB=0;
	}
	PORTC = 0b11111111;
 298:	8f ef       	ldi	r24, 0xFF	; 255
 29a:	85 bb       	out	0x15, r24	; 21
}
 29c:	08 95       	ret

0000029e <_Z2Tiv>:
void Ti()
{
	float frequency=989.1802796;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
 29e:	60 91 60 00 	lds	r22, 0x0060
 2a2:	70 91 61 00 	lds	r23, 0x0061
 2a6:	88 27       	eor	r24, r24
 2a8:	77 fd       	sbrc	r23, 7
 2aa:	80 95       	com	r24
 2ac:	98 2f       	mov	r25, r24
 2ae:	0e 94 1c 04 	call	0x838	; 0x838 <__floatsisf>
 2b2:	2b e6       	ldi	r18, 0x6B	; 107
 2b4:	36 e6       	ldi	r19, 0x66	; 102
 2b6:	41 e8       	ldi	r20, 0x81	; 129
 2b8:	5f e3       	ldi	r21, 0x3F	; 63
 2ba:	0e 94 81 03 	call	0x702	; 0x702 <__divsf3>
 2be:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__fixsfsi>
	PORTC = 0b10111111;
 2c2:	8f eb       	ldi	r24, 0xBF	; 191
 2c4:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 2c6:	16 16       	cp	r1, r22
 2c8:	17 06       	cpc	r1, r23
 2ca:	8c f4       	brge	.+34     	; 0x2ee <_Z2Tiv+0x50>
 2cc:	80 e0       	ldi	r24, 0x00	; 0
 2ce:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(0.50546);
		PORTB=1;
 2d0:	21 e0       	ldi	r18, 0x01	; 1
 2d2:	38 ea       	ldi	r19, 0xA8	; 168
 2d4:	3a 95       	dec	r19
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <_Z2Tiv+0x36>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <_Z2Tiv+0x3c>
 2da:	28 bb       	out	0x18, r18	; 24
 2dc:	38 ea       	ldi	r19, 0xA8	; 168
 2de:	3a 95       	dec	r19
 2e0:	f1 f7       	brne	.-4      	; 0x2de <_Z2Tiv+0x40>
 2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <_Z2Tiv+0x46>
		_delay_ms(0.50546);
		PORTB=0;
 2e4:	18 ba       	out	0x18, r1	; 24
	float frequency=989.1802796;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
	PORTC = 0b10111111;
	for(int i=0; i<cycles; i++)
 2e6:	01 96       	adiw	r24, 0x01	; 1
 2e8:	86 17       	cp	r24, r22
 2ea:	97 07       	cpc	r25, r23
 2ec:	91 f7       	brne	.-28     	; 0x2d2 <_Z2Tiv+0x34>
		_delay_ms(0.50546);
		PORTB=1;
		_delay_ms(0.50546);
		PORTB=0;
	}
	PORTC = 0b11111111;
 2ee:	8f ef       	ldi	r24, 0xFF	; 255
 2f0:	85 bb       	out	0x15, r24	; 21
}
 2f2:	08 95       	ret

000002f4 <_Z6DoHighv>:
void DoHigh()
{
	float frequency=1048;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
 2f4:	60 91 60 00 	lds	r22, 0x0060
 2f8:	70 91 61 00 	lds	r23, 0x0061
 2fc:	88 27       	eor	r24, r24
 2fe:	77 fd       	sbrc	r23, 7
 300:	80 95       	com	r24
 302:	98 2f       	mov	r25, r24
 304:	0e 94 1c 04 	call	0x838	; 0x838 <__floatsisf>
 308:	2a e5       	ldi	r18, 0x5A	; 90
 30a:	36 e4       	ldi	r19, 0x46	; 70
 30c:	44 e7       	ldi	r20, 0x74	; 116
 30e:	5f e3       	ldi	r21, 0x3F	; 63
 310:	0e 94 81 03 	call	0x702	; 0x702 <__divsf3>
 314:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__fixsfsi>
	PORTC = 0b01111111;
 318:	8f e7       	ldi	r24, 0x7F	; 127
 31a:	85 bb       	out	0x15, r24	; 21
	for(int i=0; i<cycles; i++)
 31c:	16 16       	cp	r1, r22
 31e:	17 06       	cpc	r1, r23
 320:	8c f4       	brge	.+34     	; 0x344 <_Z6DoHighv+0x50>
 322:	80 e0       	ldi	r24, 0x00	; 0
 324:	90 e0       	ldi	r25, 0x00	; 0
	{
		_delay_ms(.477099);
		PORTB=1;
 326:	21 e0       	ldi	r18, 0x01	; 1
 328:	3f e9       	ldi	r19, 0x9F	; 159
 32a:	3a 95       	dec	r19
 32c:	f1 f7       	brne	.-4      	; 0x32a <_Z6DoHighv+0x36>
 32e:	00 00       	nop
 330:	28 bb       	out	0x18, r18	; 24
 332:	3f e9       	ldi	r19, 0x9F	; 159
 334:	3a 95       	dec	r19
 336:	f1 f7       	brne	.-4      	; 0x334 <_Z6DoHighv+0x40>
 338:	00 00       	nop
		_delay_ms(.477099);
		PORTB=0;
 33a:	18 ba       	out	0x18, r1	; 24
	float frequency=1048;
	float periodMS=(1/frequency)*1000;
	
	int cycles=durationMS/periodMS;
	PORTC = 0b01111111;
	for(int i=0; i<cycles; i++)
 33c:	01 96       	adiw	r24, 0x01	; 1
 33e:	86 17       	cp	r24, r22
 340:	97 07       	cpc	r25, r23
 342:	91 f7       	brne	.-28     	; 0x328 <_Z6DoHighv+0x34>
		_delay_ms(.477099);
		PORTB=1;
		_delay_ms(.477099);
		PORTB=0;
	}
	PORTC = 0b11111111;
 344:	8f ef       	ldi	r24, 0xFF	; 255
 346:	85 bb       	out	0x15, r24	; 21
}
 348:	08 95       	ret

0000034a <_Z11EEPROMWritejc>:



void EEPROMWrite(unsigned int address, char data)
{
	while(EECR&(1<<EEWE));
 34a:	e1 99       	sbic	0x1c, 1	; 28
 34c:	fe cf       	rjmp	.-4      	; 0x34a <_Z11EEPROMWritejc>
	EEAR=address;
 34e:	9f bb       	out	0x1f, r25	; 31
 350:	8e bb       	out	0x1e, r24	; 30
	EEDR=data;
 352:	6d bb       	out	0x1d, r22	; 29
	EECR|=(1<<EEMWE);
 354:	e2 9a       	sbi	0x1c, 2	; 28
	EECR|=(1<<EEWE);
 356:	e1 9a       	sbi	0x1c, 1	; 28
}
 358:	08 95       	ret

0000035a <_Z10EEPROMReadj>:

char EEPROMRead(unsigned int address)
{
	while(EECR&(1<<EEWE));
 35a:	e1 99       	sbic	0x1c, 1	; 28
 35c:	fe cf       	rjmp	.-4      	; 0x35a <_Z10EEPROMReadj>
	EEAR=address;
 35e:	9f bb       	out	0x1f, r25	; 31
 360:	8e bb       	out	0x1e, r24	; 30
	EECR|=(1<<EERE);
 362:	e0 9a       	sbi	0x1c, 0	; 28
	return EEDR;
 364:	8d b3       	in	r24, 0x1d	; 29
}
 366:	08 95       	ret

00000368 <_Z8readNotec>:

void readNote(char data)
{
 368:	cf 93       	push	r28
 36a:	c8 2f       	mov	r28, r24
	if(data==1)
 36c:	81 30       	cpi	r24, 0x01	; 1
 36e:	19 f4       	brne	.+6      	; 0x376 <_Z8readNotec+0xe>
	{
		Do();
 370:	0e 94 49 00 	call	0x92	; 0x92 <_Z2Dov>
 374:	0a c0       	rjmp	.+20     	; 0x38a <_Z8readNotec+0x22>
	}
	if(data==2)
 376:	82 30       	cpi	r24, 0x02	; 2
 378:	19 f4       	brne	.+6      	; 0x380 <_Z8readNotec+0x18>
	{
		Re();
 37a:	0e 94 76 00 	call	0xec	; 0xec <_Z2Rev>
 37e:	0a c0       	rjmp	.+20     	; 0x394 <_Z8readNotec+0x2c>
	}
	if(data==3)
 380:	83 30       	cpi	r24, 0x03	; 3
 382:	19 f4       	brne	.+6      	; 0x38a <_Z8readNotec+0x22>
	{
		Mi();
 384:	0e 94 a3 00 	call	0x146	; 0x146 <_Z2Miv>
 388:	0a c0       	rjmp	.+20     	; 0x39e <_Z8readNotec+0x36>
	}
	if(data==4)
 38a:	c4 30       	cpi	r28, 0x04	; 4
 38c:	19 f4       	brne	.+6      	; 0x394 <_Z8readNotec+0x2c>
	{
		Fa();
 38e:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z2Fav>
 392:	0a c0       	rjmp	.+20     	; 0x3a8 <_Z8readNotec+0x40>
	}
	if(data==5)
 394:	c5 30       	cpi	r28, 0x05	; 5
 396:	19 f4       	brne	.+6      	; 0x39e <_Z8readNotec+0x36>
	{
		So();
 398:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <_Z2Sov>
 39c:	0a c0       	rjmp	.+20     	; 0x3b2 <_Z8readNotec+0x4a>
	}
	if(data==6)
 39e:	c6 30       	cpi	r28, 0x06	; 6
 3a0:	19 f4       	brne	.+6      	; 0x3a8 <_Z8readNotec+0x40>
	{
		La();
 3a2:	0e 94 24 01 	call	0x248	; 0x248 <_Z2Lav>
 3a6:	09 c0       	rjmp	.+18     	; 0x3ba <_Z8readNotec+0x52>
	}
	if(data==7)
 3a8:	c7 30       	cpi	r28, 0x07	; 7
 3aa:	19 f4       	brne	.+6      	; 0x3b2 <_Z8readNotec+0x4a>
	{
		Ti();
 3ac:	0e 94 4f 01 	call	0x29e	; 0x29e <_Z2Tiv>
 3b0:	04 c0       	rjmp	.+8      	; 0x3ba <_Z8readNotec+0x52>
	}
	if(data==8)
 3b2:	c8 30       	cpi	r28, 0x08	; 8
 3b4:	11 f4       	brne	.+4      	; 0x3ba <_Z8readNotec+0x52>
	{
		DoHigh();
 3b6:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <_Z6DoHighv>
	}
}
 3ba:	cf 91       	pop	r28
 3bc:	08 95       	ret

000003be <_Z10playNote1sc>:

void playNote1s(char data)
{
 3be:	1f 93       	push	r17
 3c0:	cf 93       	push	r28
 3c2:	df 93       	push	r29
 3c4:	18 2f       	mov	r17, r24
 3c6:	c4 e6       	ldi	r28, 0x64	; 100
 3c8:	d0 e0       	ldi	r29, 0x00	; 0
	int i;
	for(i=0; i<100; i++)
	{
		readNote(data);
 3ca:	81 2f       	mov	r24, r17
 3cc:	0e 94 b4 01 	call	0x368	; 0x368 <_Z8readNotec>
 3d0:	21 97       	sbiw	r28, 0x01	; 1
}

void playNote1s(char data)
{
	int i;
	for(i=0; i<100; i++)
 3d2:	d9 f7       	brne	.-10     	; 0x3ca <_Z10playNote1sc+0xc>
	{
		readNote(data);
	}
}
 3d4:	df 91       	pop	r29
 3d6:	cf 91       	pop	r28
 3d8:	1f 91       	pop	r17
 3da:	08 95       	ret

000003dc <_Z11EEPROMClearv>:

void EEPROMClear()
{
 3dc:	cf 93       	push	r28
 3de:	df 93       	push	r29
	int i;
	for(i=0; i<1023; i++)
 3e0:	c0 e0       	ldi	r28, 0x00	; 0
 3e2:	d0 e0       	ldi	r29, 0x00	; 0
	{
		EEPROMWrite(i, 255);
 3e4:	ce 01       	movw	r24, r28
 3e6:	6f ef       	ldi	r22, 0xFF	; 255
 3e8:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z11EEPROMWritejc>
}

void EEPROMClear()
{
	int i;
	for(i=0; i<1023; i++)
 3ec:	21 96       	adiw	r28, 0x01	; 1
 3ee:	83 e0       	ldi	r24, 0x03	; 3
 3f0:	cf 3f       	cpi	r28, 0xFF	; 255
 3f2:	d8 07       	cpc	r29, r24
 3f4:	b9 f7       	brne	.-18     	; 0x3e4 <_Z11EEPROMClearv+0x8>
	{
		EEPROMWrite(i, 255);
	}
}
 3f6:	df 91       	pop	r29
 3f8:	cf 91       	pop	r28
 3fa:	08 95       	ret

000003fc <__vector_3>:

ISR(INT2_vect){
 3fc:	1f 92       	push	r1
 3fe:	0f 92       	push	r0
 400:	0f b6       	in	r0, 0x3f	; 63
 402:	0f 92       	push	r0
 404:	11 24       	eor	r1, r1
 406:	2f 93       	push	r18
 408:	3f 93       	push	r19
 40a:	4f 93       	push	r20
 40c:	5f 93       	push	r21
 40e:	6f 93       	push	r22
 410:	7f 93       	push	r23
 412:	8f 93       	push	r24
 414:	9f 93       	push	r25
 416:	af 93       	push	r26
 418:	bf 93       	push	r27
 41a:	ef 93       	push	r30
 41c:	ff 93       	push	r31
	save = 1 - save;
 41e:	20 91 64 00 	lds	r18, 0x0064
 422:	30 91 65 00 	lds	r19, 0x0065
 426:	81 e0       	ldi	r24, 0x01	; 1
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	82 1b       	sub	r24, r18
 42c:	93 0b       	sbc	r25, r19
 42e:	90 93 65 00 	sts	0x0065, r25
 432:	80 93 64 00 	sts	0x0064, r24
	if(save==0)
 436:	00 97       	sbiw	r24, 0x00	; 0
 438:	59 f4       	brne	.+22     	; 0x450 <__vector_3+0x54>
	{
		EEPROMWrite(EEPROMAddress, 9);
 43a:	80 91 62 00 	lds	r24, 0x0062
 43e:	90 91 63 00 	lds	r25, 0x0063
 442:	69 e0       	ldi	r22, 0x09	; 9
 444:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z11EEPROMWritejc>
		EEPROMAddress=0;
 448:	10 92 63 00 	sts	0x0063, r1
 44c:	10 92 62 00 	sts	0x0062, r1
	}
	GIFR|=(1<<INTF2);
 450:	8a b7       	in	r24, 0x3a	; 58
 452:	80 62       	ori	r24, 0x20	; 32
 454:	8a bf       	out	0x3a, r24	; 58
}
 456:	ff 91       	pop	r31
 458:	ef 91       	pop	r30
 45a:	bf 91       	pop	r27
 45c:	af 91       	pop	r26
 45e:	9f 91       	pop	r25
 460:	8f 91       	pop	r24
 462:	7f 91       	pop	r23
 464:	6f 91       	pop	r22
 466:	5f 91       	pop	r21
 468:	4f 91       	pop	r20
 46a:	3f 91       	pop	r19
 46c:	2f 91       	pop	r18
 46e:	0f 90       	pop	r0
 470:	0f be       	out	0x3f, r0	; 63
 472:	0f 90       	pop	r0
 474:	1f 90       	pop	r1
 476:	18 95       	reti

00000478 <_Z14playFromEEPROMv>:

void playFromEEPROM()
{
 478:	cf 93       	push	r28
 47a:	df 93       	push	r29
	int i=0;
 47c:	c0 e0       	ldi	r28, 0x00	; 0
 47e:	d0 e0       	ldi	r29, 0x00	; 0
	while(1)
	{
		char data=EEPROMRead(i);
 480:	ce 01       	movw	r24, r28
 482:	0e 94 ad 01 	call	0x35a	; 0x35a <_Z10EEPROMReadj>
		if(data==9) break;
 486:	89 30       	cpi	r24, 0x09	; 9
 488:	21 f0       	breq	.+8      	; 0x492 <_Z14playFromEEPROMv+0x1a>
		readNote(data);
 48a:	0e 94 b4 01 	call	0x368	; 0x368 <_Z8readNotec>
		i++;		
 48e:	21 96       	adiw	r28, 0x01	; 1
}

void playFromEEPROM()
{
	int i=0;
	while(1)
 490:	f7 cf       	rjmp	.-18     	; 0x480 <_Z14playFromEEPROMv+0x8>
		char data=EEPROMRead(i);
		if(data==9) break;
		readNote(data);
		i++;		
	}
}
 492:	df 91       	pop	r29
 494:	cf 91       	pop	r28
 496:	08 95       	ret

00000498 <__vector_1>:


ISR(INT0_vect){
 498:	1f 92       	push	r1
 49a:	0f 92       	push	r0
 49c:	0f b6       	in	r0, 0x3f	; 63
 49e:	0f 92       	push	r0
 4a0:	11 24       	eor	r1, r1
 4a2:	2f 93       	push	r18
 4a4:	3f 93       	push	r19
 4a6:	4f 93       	push	r20
 4a8:	5f 93       	push	r21
 4aa:	6f 93       	push	r22
 4ac:	7f 93       	push	r23
 4ae:	8f 93       	push	r24
 4b0:	9f 93       	push	r25
 4b2:	af 93       	push	r26
 4b4:	bf 93       	push	r27
 4b6:	ef 93       	push	r30
 4b8:	ff 93       	push	r31
 4ba:	8f e3       	ldi	r24, 0x3F	; 63
 4bc:	9d e0       	ldi	r25, 0x0D	; 13
 4be:	a3 e0       	ldi	r26, 0x03	; 3
 4c0:	81 50       	subi	r24, 0x01	; 1
 4c2:	90 40       	sbci	r25, 0x00	; 0
 4c4:	a0 40       	sbci	r26, 0x00	; 0
 4c6:	e1 f7       	brne	.-8      	; 0x4c0 <__vector_1+0x28>
 4c8:	00 c0       	rjmp	.+0      	; 0x4ca <__vector_1+0x32>
 4ca:	00 00       	nop
	_delay_ms(1000);
	playFromEEPROM();
 4cc:	0e 94 3c 02 	call	0x478	; 0x478 <_Z14playFromEEPROMv>
	GIFR|=(1<<INTF0);
 4d0:	8a b7       	in	r24, 0x3a	; 58
 4d2:	80 64       	ori	r24, 0x40	; 64
 4d4:	8a bf       	out	0x3a, r24	; 58
}
 4d6:	ff 91       	pop	r31
 4d8:	ef 91       	pop	r30
 4da:	bf 91       	pop	r27
 4dc:	af 91       	pop	r26
 4de:	9f 91       	pop	r25
 4e0:	8f 91       	pop	r24
 4e2:	7f 91       	pop	r23
 4e4:	6f 91       	pop	r22
 4e6:	5f 91       	pop	r21
 4e8:	4f 91       	pop	r20
 4ea:	3f 91       	pop	r19
 4ec:	2f 91       	pop	r18
 4ee:	0f 90       	pop	r0
 4f0:	0f be       	out	0x3f, r0	; 63
 4f2:	0f 90       	pop	r0
 4f4:	1f 90       	pop	r1
 4f6:	18 95       	reti

000004f8 <main>:


int main(void)
{
	DDRB=0b00000001;
 4f8:	81 e0       	ldi	r24, 0x01	; 1
 4fa:	87 bb       	out	0x17, r24	; 23
	GICR |= (1<<INT2);
 4fc:	8b b7       	in	r24, 0x3b	; 59
 4fe:	80 62       	ori	r24, 0x20	; 32
 500:	8b bf       	out	0x3b, r24	; 59
	GICR |= (1<<INT0);
 502:	8b b7       	in	r24, 0x3b	; 59
 504:	80 64       	ori	r24, 0x40	; 64
 506:	8b bf       	out	0x3b, r24	; 59
	MCUCR |= 3; 
 508:	85 b7       	in	r24, 0x35	; 53
 50a:	83 60       	ori	r24, 0x03	; 3
 50c:	85 bf       	out	0x35, r24	; 53
	MCUCSR |= (1<<ISC2);
 50e:	84 b7       	in	r24, 0x34	; 52
 510:	80 64       	ori	r24, 0x40	; 64
 512:	84 bf       	out	0x34, r24	; 52
	DDRA=0x00;
 514:	1a ba       	out	0x1a, r1	; 26
	DDRC = 0xFF;
 516:	8f ef       	ldi	r24, 0xFF	; 255
 518:	84 bb       	out	0x14, r24	; 20
	MCUCSR |= (1<<JTD);
 51a:	94 b7       	in	r25, 0x34	; 52
 51c:	90 68       	ori	r25, 0x80	; 128
 51e:	94 bf       	out	0x34, r25	; 52
	MCUCSR |= (1<<JTD);
 520:	94 b7       	in	r25, 0x34	; 52
 522:	90 68       	ori	r25, 0x80	; 128
 524:	94 bf       	out	0x34, r25	; 52
	PORTC = 0xFF;
 526:	85 bb       	out	0x15, r24	; 21
	ADMUX=0b00100000;
 528:	80 e2       	ldi	r24, 0x20	; 32
 52a:	87 b9       	out	0x07, r24	; 7
	ADCSRA=0b10000000;
 52c:	80 e8       	ldi	r24, 0x80	; 128
 52e:	86 b9       	out	0x06, r24	; 6
	//EEPROMClear();
	sei();
 530:	78 94       	sei
					EEPROMWrite(EEPROMAddress++, 8);
				}
				DoHigh();
			}
		}
	PORTC = 0b11111111;				
 532:	cf ef       	ldi	r28, 0xFF	; 255
	sei();
	
	
    while(1)
    {
		ADCSRA|=(1<<ADSC);
 534:	36 9a       	sbi	0x06, 6	; 6
		while(ADCSRA&(1<<ADSC)){;}
 536:	36 99       	sbic	0x06, 6	; 6
 538:	fe cf       	rjmp	.-4      	; 0x536 <main+0x3e>
		int result=ADCH;
 53a:	65 b1       	in	r22, 0x05	; 5
		double y=(result/256.0)*3.17;
		unsigned char a=PINA;
 53c:	19 b3       	in	r17, 0x19	; 25
		if((a&1) || (y>1.1))
 53e:	10 fd       	sbrc	r17, 0
 540:	19 c0       	rjmp	.+50     	; 0x574 <main+0x7c>
    while(1)
    {
		ADCSRA|=(1<<ADSC);
		while(ADCSRA&(1<<ADSC)){;}
		int result=ADCH;
		double y=(result/256.0)*3.17;
 542:	70 e0       	ldi	r23, 0x00	; 0
 544:	80 e0       	ldi	r24, 0x00	; 0
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	0e 94 1c 04 	call	0x838	; 0x838 <__floatsisf>
 54c:	20 e0       	ldi	r18, 0x00	; 0
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	40 e8       	ldi	r20, 0x80	; 128
 552:	5b e3       	ldi	r21, 0x3B	; 59
 554:	0e 94 ac 04 	call	0x958	; 0x958 <__mulsf3>
 558:	28 e4       	ldi	r18, 0x48	; 72
 55a:	31 ee       	ldi	r19, 0xE1	; 225
 55c:	4a e4       	ldi	r20, 0x4A	; 74
 55e:	50 e4       	ldi	r21, 0x40	; 64
 560:	0e 94 ac 04 	call	0x958	; 0x958 <__mulsf3>
		unsigned char a=PINA;
		if((a&1) || (y>1.1))
 564:	2d ec       	ldi	r18, 0xCD	; 205
 566:	3c ec       	ldi	r19, 0xCC	; 204
 568:	4c e8       	ldi	r20, 0x8C	; 140
 56a:	5f e3       	ldi	r21, 0x3F	; 63
 56c:	0e 94 a8 04 	call	0x950	; 0x950 <__gesf2>
 570:	18 16       	cp	r1, r24
 572:	bc f4       	brge	.+46     	; 0x5a2 <main+0xaa>
		{
			if(save)
 574:	80 91 64 00 	lds	r24, 0x0064
 578:	90 91 65 00 	lds	r25, 0x0065
 57c:	00 97       	sbiw	r24, 0x00	; 0
 57e:	71 f0       	breq	.+28     	; 0x59c <main+0xa4>
			{
				EEPROMWrite(EEPROMAddress++, 1);
 580:	80 91 62 00 	lds	r24, 0x0062
 584:	90 91 63 00 	lds	r25, 0x0063
 588:	9c 01       	movw	r18, r24
 58a:	2f 5f       	subi	r18, 0xFF	; 255
 58c:	3f 4f       	sbci	r19, 0xFF	; 255
 58e:	30 93 63 00 	sts	0x0063, r19
 592:	20 93 62 00 	sts	0x0062, r18
 596:	61 e0       	ldi	r22, 0x01	; 1
 598:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z11EEPROMWritejc>
			}
			Do();
 59c:	0e 94 49 00 	call	0x92	; 0x92 <_Z2Dov>
 5a0:	ae c0       	rjmp	.+348    	; 0x6fe <main+0x206>
		}
		else
		{
			if(a&(1<<1))
 5a2:	11 ff       	sbrs	r17, 1
 5a4:	17 c0       	rjmp	.+46     	; 0x5d4 <main+0xdc>
			{
				if(save)
 5a6:	80 91 64 00 	lds	r24, 0x0064
 5aa:	90 91 65 00 	lds	r25, 0x0065
 5ae:	00 97       	sbiw	r24, 0x00	; 0
 5b0:	71 f0       	breq	.+28     	; 0x5ce <main+0xd6>
				{
					EEPROMWrite(EEPROMAddress++, 2);
 5b2:	80 91 62 00 	lds	r24, 0x0062
 5b6:	90 91 63 00 	lds	r25, 0x0063
 5ba:	9c 01       	movw	r18, r24
 5bc:	2f 5f       	subi	r18, 0xFF	; 255
 5be:	3f 4f       	sbci	r19, 0xFF	; 255
 5c0:	30 93 63 00 	sts	0x0063, r19
 5c4:	20 93 62 00 	sts	0x0062, r18
 5c8:	62 e0       	ldi	r22, 0x02	; 2
 5ca:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z11EEPROMWritejc>
				}
				Re();
 5ce:	0e 94 76 00 	call	0xec	; 0xec <_Z2Rev>
 5d2:	95 c0       	rjmp	.+298    	; 0x6fe <main+0x206>
			}
			else if(a&(1<<2))
 5d4:	12 ff       	sbrs	r17, 2
 5d6:	17 c0       	rjmp	.+46     	; 0x606 <main+0x10e>
			{
				if(save)
 5d8:	80 91 64 00 	lds	r24, 0x0064
 5dc:	90 91 65 00 	lds	r25, 0x0065
 5e0:	00 97       	sbiw	r24, 0x00	; 0
 5e2:	71 f0       	breq	.+28     	; 0x600 <main+0x108>
				{
					EEPROMWrite(EEPROMAddress++, 3);
 5e4:	80 91 62 00 	lds	r24, 0x0062
 5e8:	90 91 63 00 	lds	r25, 0x0063
 5ec:	9c 01       	movw	r18, r24
 5ee:	2f 5f       	subi	r18, 0xFF	; 255
 5f0:	3f 4f       	sbci	r19, 0xFF	; 255
 5f2:	30 93 63 00 	sts	0x0063, r19
 5f6:	20 93 62 00 	sts	0x0062, r18
 5fa:	63 e0       	ldi	r22, 0x03	; 3
 5fc:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z11EEPROMWritejc>
				}
				Mi();
 600:	0e 94 a3 00 	call	0x146	; 0x146 <_Z2Miv>
 604:	7c c0       	rjmp	.+248    	; 0x6fe <main+0x206>
			}
			else if(a&(1<<3))
 606:	13 ff       	sbrs	r17, 3
 608:	17 c0       	rjmp	.+46     	; 0x638 <main+0x140>
			{
				if(save)
 60a:	80 91 64 00 	lds	r24, 0x0064
 60e:	90 91 65 00 	lds	r25, 0x0065
 612:	00 97       	sbiw	r24, 0x00	; 0
 614:	71 f0       	breq	.+28     	; 0x632 <main+0x13a>
				{
					EEPROMWrite(EEPROMAddress++, 4);
 616:	80 91 62 00 	lds	r24, 0x0062
 61a:	90 91 63 00 	lds	r25, 0x0063
 61e:	9c 01       	movw	r18, r24
 620:	2f 5f       	subi	r18, 0xFF	; 255
 622:	3f 4f       	sbci	r19, 0xFF	; 255
 624:	30 93 63 00 	sts	0x0063, r19
 628:	20 93 62 00 	sts	0x0062, r18
 62c:	64 e0       	ldi	r22, 0x04	; 4
 62e:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z11EEPROMWritejc>
				}
				Fa();
 632:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z2Fav>
 636:	63 c0       	rjmp	.+198    	; 0x6fe <main+0x206>
			}
			else if(a&(1<<4))
 638:	14 ff       	sbrs	r17, 4
 63a:	17 c0       	rjmp	.+46     	; 0x66a <main+0x172>
			{
				if(save)
 63c:	80 91 64 00 	lds	r24, 0x0064
 640:	90 91 65 00 	lds	r25, 0x0065
 644:	00 97       	sbiw	r24, 0x00	; 0
 646:	71 f0       	breq	.+28     	; 0x664 <main+0x16c>
				{
					EEPROMWrite(EEPROMAddress++, 5);
 648:	80 91 62 00 	lds	r24, 0x0062
 64c:	90 91 63 00 	lds	r25, 0x0063
 650:	9c 01       	movw	r18, r24
 652:	2f 5f       	subi	r18, 0xFF	; 255
 654:	3f 4f       	sbci	r19, 0xFF	; 255
 656:	30 93 63 00 	sts	0x0063, r19
 65a:	20 93 62 00 	sts	0x0062, r18
 65e:	65 e0       	ldi	r22, 0x05	; 5
 660:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z11EEPROMWritejc>
				}
				So();
 664:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <_Z2Sov>
 668:	4a c0       	rjmp	.+148    	; 0x6fe <main+0x206>
			}
			else if(a&(1<<5))
 66a:	15 ff       	sbrs	r17, 5
 66c:	17 c0       	rjmp	.+46     	; 0x69c <main+0x1a4>
			{
				if(save)
 66e:	80 91 64 00 	lds	r24, 0x0064
 672:	90 91 65 00 	lds	r25, 0x0065
 676:	00 97       	sbiw	r24, 0x00	; 0
 678:	71 f0       	breq	.+28     	; 0x696 <main+0x19e>
				{
					EEPROMWrite(EEPROMAddress++, 6);
 67a:	80 91 62 00 	lds	r24, 0x0062
 67e:	90 91 63 00 	lds	r25, 0x0063
 682:	9c 01       	movw	r18, r24
 684:	2f 5f       	subi	r18, 0xFF	; 255
 686:	3f 4f       	sbci	r19, 0xFF	; 255
 688:	30 93 63 00 	sts	0x0063, r19
 68c:	20 93 62 00 	sts	0x0062, r18
 690:	66 e0       	ldi	r22, 0x06	; 6
 692:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z11EEPROMWritejc>
				}
				La();
 696:	0e 94 24 01 	call	0x248	; 0x248 <_Z2Lav>
 69a:	31 c0       	rjmp	.+98     	; 0x6fe <main+0x206>
			}
			else if(a&(1<<6))
 69c:	16 ff       	sbrs	r17, 6
 69e:	17 c0       	rjmp	.+46     	; 0x6ce <main+0x1d6>
			{
				if(save)
 6a0:	80 91 64 00 	lds	r24, 0x0064
 6a4:	90 91 65 00 	lds	r25, 0x0065
 6a8:	00 97       	sbiw	r24, 0x00	; 0
 6aa:	71 f0       	breq	.+28     	; 0x6c8 <main+0x1d0>
				{
					EEPROMWrite(EEPROMAddress++, 7);
 6ac:	80 91 62 00 	lds	r24, 0x0062
 6b0:	90 91 63 00 	lds	r25, 0x0063
 6b4:	9c 01       	movw	r18, r24
 6b6:	2f 5f       	subi	r18, 0xFF	; 255
 6b8:	3f 4f       	sbci	r19, 0xFF	; 255
 6ba:	30 93 63 00 	sts	0x0063, r19
 6be:	20 93 62 00 	sts	0x0062, r18
 6c2:	67 e0       	ldi	r22, 0x07	; 7
 6c4:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z11EEPROMWritejc>
				}
				Ti();
 6c8:	0e 94 4f 01 	call	0x29e	; 0x29e <_Z2Tiv>
 6cc:	18 c0       	rjmp	.+48     	; 0x6fe <main+0x206>
			}
			else if(a&(1<<7))
 6ce:	11 23       	and	r17, r17
 6d0:	b4 f4       	brge	.+44     	; 0x6fe <main+0x206>
			{
				if(save)
 6d2:	80 91 64 00 	lds	r24, 0x0064
 6d6:	90 91 65 00 	lds	r25, 0x0065
 6da:	00 97       	sbiw	r24, 0x00	; 0
 6dc:	71 f0       	breq	.+28     	; 0x6fa <main+0x202>
				{
					EEPROMWrite(EEPROMAddress++, 8);
 6de:	80 91 62 00 	lds	r24, 0x0062
 6e2:	90 91 63 00 	lds	r25, 0x0063
 6e6:	9c 01       	movw	r18, r24
 6e8:	2f 5f       	subi	r18, 0xFF	; 255
 6ea:	3f 4f       	sbci	r19, 0xFF	; 255
 6ec:	30 93 63 00 	sts	0x0063, r19
 6f0:	20 93 62 00 	sts	0x0062, r18
 6f4:	68 e0       	ldi	r22, 0x08	; 8
 6f6:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z11EEPROMWritejc>
				}
				DoHigh();
 6fa:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <_Z6DoHighv>
			}
		}
	PORTC = 0b11111111;				
 6fe:	c5 bb       	out	0x15, r28	; 21
	ADCSRA=0b10000000;
	//EEPROMClear();
	sei();
	
	
    while(1)
 700:	19 cf       	rjmp	.-462    	; 0x534 <main+0x3c>

00000702 <__divsf3>:
 702:	0c d0       	rcall	.+24     	; 0x71c <__divsf3x>
 704:	eb c0       	rjmp	.+470    	; 0x8dc <__fp_round>
 706:	e3 d0       	rcall	.+454    	; 0x8ce <__fp_pscB>
 708:	40 f0       	brcs	.+16     	; 0x71a <__divsf3+0x18>
 70a:	da d0       	rcall	.+436    	; 0x8c0 <__fp_pscA>
 70c:	30 f0       	brcs	.+12     	; 0x71a <__divsf3+0x18>
 70e:	21 f4       	brne	.+8      	; 0x718 <__divsf3+0x16>
 710:	5f 3f       	cpi	r21, 0xFF	; 255
 712:	19 f0       	breq	.+6      	; 0x71a <__divsf3+0x18>
 714:	cc c0       	rjmp	.+408    	; 0x8ae <__fp_inf>
 716:	51 11       	cpse	r21, r1
 718:	15 c1       	rjmp	.+554    	; 0x944 <__fp_szero>
 71a:	cf c0       	rjmp	.+414    	; 0x8ba <__fp_nan>

0000071c <__divsf3x>:
 71c:	f0 d0       	rcall	.+480    	; 0x8fe <__fp_split3>
 71e:	98 f3       	brcs	.-26     	; 0x706 <__divsf3+0x4>

00000720 <__divsf3_pse>:
 720:	99 23       	and	r25, r25
 722:	c9 f3       	breq	.-14     	; 0x716 <__divsf3+0x14>
 724:	55 23       	and	r21, r21
 726:	b1 f3       	breq	.-20     	; 0x714 <__divsf3+0x12>
 728:	95 1b       	sub	r25, r21
 72a:	55 0b       	sbc	r21, r21
 72c:	bb 27       	eor	r27, r27
 72e:	aa 27       	eor	r26, r26
 730:	62 17       	cp	r22, r18
 732:	73 07       	cpc	r23, r19
 734:	84 07       	cpc	r24, r20
 736:	38 f0       	brcs	.+14     	; 0x746 <__divsf3_pse+0x26>
 738:	9f 5f       	subi	r25, 0xFF	; 255
 73a:	5f 4f       	sbci	r21, 0xFF	; 255
 73c:	22 0f       	add	r18, r18
 73e:	33 1f       	adc	r19, r19
 740:	44 1f       	adc	r20, r20
 742:	aa 1f       	adc	r26, r26
 744:	a9 f3       	breq	.-22     	; 0x730 <__divsf3_pse+0x10>
 746:	33 d0       	rcall	.+102    	; 0x7ae <__divsf3_pse+0x8e>
 748:	0e 2e       	mov	r0, r30
 74a:	3a f0       	brmi	.+14     	; 0x75a <__divsf3_pse+0x3a>
 74c:	e0 e8       	ldi	r30, 0x80	; 128
 74e:	30 d0       	rcall	.+96     	; 0x7b0 <__divsf3_pse+0x90>
 750:	91 50       	subi	r25, 0x01	; 1
 752:	50 40       	sbci	r21, 0x00	; 0
 754:	e6 95       	lsr	r30
 756:	00 1c       	adc	r0, r0
 758:	ca f7       	brpl	.-14     	; 0x74c <__divsf3_pse+0x2c>
 75a:	29 d0       	rcall	.+82     	; 0x7ae <__divsf3_pse+0x8e>
 75c:	fe 2f       	mov	r31, r30
 75e:	27 d0       	rcall	.+78     	; 0x7ae <__divsf3_pse+0x8e>
 760:	66 0f       	add	r22, r22
 762:	77 1f       	adc	r23, r23
 764:	88 1f       	adc	r24, r24
 766:	bb 1f       	adc	r27, r27
 768:	26 17       	cp	r18, r22
 76a:	37 07       	cpc	r19, r23
 76c:	48 07       	cpc	r20, r24
 76e:	ab 07       	cpc	r26, r27
 770:	b0 e8       	ldi	r27, 0x80	; 128
 772:	09 f0       	breq	.+2      	; 0x776 <__divsf3_pse+0x56>
 774:	bb 0b       	sbc	r27, r27
 776:	80 2d       	mov	r24, r0
 778:	bf 01       	movw	r22, r30
 77a:	ff 27       	eor	r31, r31
 77c:	93 58       	subi	r25, 0x83	; 131
 77e:	5f 4f       	sbci	r21, 0xFF	; 255
 780:	2a f0       	brmi	.+10     	; 0x78c <__divsf3_pse+0x6c>
 782:	9e 3f       	cpi	r25, 0xFE	; 254
 784:	51 05       	cpc	r21, r1
 786:	68 f0       	brcs	.+26     	; 0x7a2 <__divsf3_pse+0x82>
 788:	92 c0       	rjmp	.+292    	; 0x8ae <__fp_inf>
 78a:	dc c0       	rjmp	.+440    	; 0x944 <__fp_szero>
 78c:	5f 3f       	cpi	r21, 0xFF	; 255
 78e:	ec f3       	brlt	.-6      	; 0x78a <__divsf3_pse+0x6a>
 790:	98 3e       	cpi	r25, 0xE8	; 232
 792:	dc f3       	brlt	.-10     	; 0x78a <__divsf3_pse+0x6a>
 794:	86 95       	lsr	r24
 796:	77 95       	ror	r23
 798:	67 95       	ror	r22
 79a:	b7 95       	ror	r27
 79c:	f7 95       	ror	r31
 79e:	9f 5f       	subi	r25, 0xFF	; 255
 7a0:	c9 f7       	brne	.-14     	; 0x794 <__divsf3_pse+0x74>
 7a2:	88 0f       	add	r24, r24
 7a4:	91 1d       	adc	r25, r1
 7a6:	96 95       	lsr	r25
 7a8:	87 95       	ror	r24
 7aa:	97 f9       	bld	r25, 7
 7ac:	08 95       	ret
 7ae:	e1 e0       	ldi	r30, 0x01	; 1
 7b0:	66 0f       	add	r22, r22
 7b2:	77 1f       	adc	r23, r23
 7b4:	88 1f       	adc	r24, r24
 7b6:	bb 1f       	adc	r27, r27
 7b8:	62 17       	cp	r22, r18
 7ba:	73 07       	cpc	r23, r19
 7bc:	84 07       	cpc	r24, r20
 7be:	ba 07       	cpc	r27, r26
 7c0:	20 f0       	brcs	.+8      	; 0x7ca <__divsf3_pse+0xaa>
 7c2:	62 1b       	sub	r22, r18
 7c4:	73 0b       	sbc	r23, r19
 7c6:	84 0b       	sbc	r24, r20
 7c8:	ba 0b       	sbc	r27, r26
 7ca:	ee 1f       	adc	r30, r30
 7cc:	88 f7       	brcc	.-30     	; 0x7b0 <__divsf3_pse+0x90>
 7ce:	e0 95       	com	r30
 7d0:	08 95       	ret

000007d2 <__fixsfsi>:
 7d2:	04 d0       	rcall	.+8      	; 0x7dc <__fixunssfsi>
 7d4:	68 94       	set
 7d6:	b1 11       	cpse	r27, r1
 7d8:	b5 c0       	rjmp	.+362    	; 0x944 <__fp_szero>
 7da:	08 95       	ret

000007dc <__fixunssfsi>:
 7dc:	98 d0       	rcall	.+304    	; 0x90e <__fp_splitA>
 7de:	88 f0       	brcs	.+34     	; 0x802 <__fixunssfsi+0x26>
 7e0:	9f 57       	subi	r25, 0x7F	; 127
 7e2:	90 f0       	brcs	.+36     	; 0x808 <__fixunssfsi+0x2c>
 7e4:	b9 2f       	mov	r27, r25
 7e6:	99 27       	eor	r25, r25
 7e8:	b7 51       	subi	r27, 0x17	; 23
 7ea:	a0 f0       	brcs	.+40     	; 0x814 <__fixunssfsi+0x38>
 7ec:	d1 f0       	breq	.+52     	; 0x822 <__fixunssfsi+0x46>
 7ee:	66 0f       	add	r22, r22
 7f0:	77 1f       	adc	r23, r23
 7f2:	88 1f       	adc	r24, r24
 7f4:	99 1f       	adc	r25, r25
 7f6:	1a f0       	brmi	.+6      	; 0x7fe <__fixunssfsi+0x22>
 7f8:	ba 95       	dec	r27
 7fa:	c9 f7       	brne	.-14     	; 0x7ee <__fixunssfsi+0x12>
 7fc:	12 c0       	rjmp	.+36     	; 0x822 <__fixunssfsi+0x46>
 7fe:	b1 30       	cpi	r27, 0x01	; 1
 800:	81 f0       	breq	.+32     	; 0x822 <__fixunssfsi+0x46>
 802:	9f d0       	rcall	.+318    	; 0x942 <__fp_zero>
 804:	b1 e0       	ldi	r27, 0x01	; 1
 806:	08 95       	ret
 808:	9c c0       	rjmp	.+312    	; 0x942 <__fp_zero>
 80a:	67 2f       	mov	r22, r23
 80c:	78 2f       	mov	r23, r24
 80e:	88 27       	eor	r24, r24
 810:	b8 5f       	subi	r27, 0xF8	; 248
 812:	39 f0       	breq	.+14     	; 0x822 <__fixunssfsi+0x46>
 814:	b9 3f       	cpi	r27, 0xF9	; 249
 816:	cc f3       	brlt	.-14     	; 0x80a <__fixunssfsi+0x2e>
 818:	86 95       	lsr	r24
 81a:	77 95       	ror	r23
 81c:	67 95       	ror	r22
 81e:	b3 95       	inc	r27
 820:	d9 f7       	brne	.-10     	; 0x818 <__fixunssfsi+0x3c>
 822:	3e f4       	brtc	.+14     	; 0x832 <__fixunssfsi+0x56>
 824:	90 95       	com	r25
 826:	80 95       	com	r24
 828:	70 95       	com	r23
 82a:	61 95       	neg	r22
 82c:	7f 4f       	sbci	r23, 0xFF	; 255
 82e:	8f 4f       	sbci	r24, 0xFF	; 255
 830:	9f 4f       	sbci	r25, 0xFF	; 255
 832:	08 95       	ret

00000834 <__floatunsisf>:
 834:	e8 94       	clt
 836:	09 c0       	rjmp	.+18     	; 0x84a <__floatsisf+0x12>

00000838 <__floatsisf>:
 838:	97 fb       	bst	r25, 7
 83a:	3e f4       	brtc	.+14     	; 0x84a <__floatsisf+0x12>
 83c:	90 95       	com	r25
 83e:	80 95       	com	r24
 840:	70 95       	com	r23
 842:	61 95       	neg	r22
 844:	7f 4f       	sbci	r23, 0xFF	; 255
 846:	8f 4f       	sbci	r24, 0xFF	; 255
 848:	9f 4f       	sbci	r25, 0xFF	; 255
 84a:	99 23       	and	r25, r25
 84c:	a9 f0       	breq	.+42     	; 0x878 <__stack+0x19>
 84e:	f9 2f       	mov	r31, r25
 850:	96 e9       	ldi	r25, 0x96	; 150
 852:	bb 27       	eor	r27, r27
 854:	93 95       	inc	r25
 856:	f6 95       	lsr	r31
 858:	87 95       	ror	r24
 85a:	77 95       	ror	r23
 85c:	67 95       	ror	r22
 85e:	b7 95       	ror	r27
 860:	f1 11       	cpse	r31, r1
 862:	f8 cf       	rjmp	.-16     	; 0x854 <__floatsisf+0x1c>
 864:	fa f4       	brpl	.+62     	; 0x8a4 <__stack+0x45>
 866:	bb 0f       	add	r27, r27
 868:	11 f4       	brne	.+4      	; 0x86e <__stack+0xf>
 86a:	60 ff       	sbrs	r22, 0
 86c:	1b c0       	rjmp	.+54     	; 0x8a4 <__stack+0x45>
 86e:	6f 5f       	subi	r22, 0xFF	; 255
 870:	7f 4f       	sbci	r23, 0xFF	; 255
 872:	8f 4f       	sbci	r24, 0xFF	; 255
 874:	9f 4f       	sbci	r25, 0xFF	; 255
 876:	16 c0       	rjmp	.+44     	; 0x8a4 <__stack+0x45>
 878:	88 23       	and	r24, r24
 87a:	11 f0       	breq	.+4      	; 0x880 <__stack+0x21>
 87c:	96 e9       	ldi	r25, 0x96	; 150
 87e:	11 c0       	rjmp	.+34     	; 0x8a2 <__stack+0x43>
 880:	77 23       	and	r23, r23
 882:	21 f0       	breq	.+8      	; 0x88c <__stack+0x2d>
 884:	9e e8       	ldi	r25, 0x8E	; 142
 886:	87 2f       	mov	r24, r23
 888:	76 2f       	mov	r23, r22
 88a:	05 c0       	rjmp	.+10     	; 0x896 <__stack+0x37>
 88c:	66 23       	and	r22, r22
 88e:	71 f0       	breq	.+28     	; 0x8ac <__stack+0x4d>
 890:	96 e8       	ldi	r25, 0x86	; 134
 892:	86 2f       	mov	r24, r22
 894:	70 e0       	ldi	r23, 0x00	; 0
 896:	60 e0       	ldi	r22, 0x00	; 0
 898:	2a f0       	brmi	.+10     	; 0x8a4 <__stack+0x45>
 89a:	9a 95       	dec	r25
 89c:	66 0f       	add	r22, r22
 89e:	77 1f       	adc	r23, r23
 8a0:	88 1f       	adc	r24, r24
 8a2:	da f7       	brpl	.-10     	; 0x89a <__stack+0x3b>
 8a4:	88 0f       	add	r24, r24
 8a6:	96 95       	lsr	r25
 8a8:	87 95       	ror	r24
 8aa:	97 f9       	bld	r25, 7
 8ac:	08 95       	ret

000008ae <__fp_inf>:
 8ae:	97 f9       	bld	r25, 7
 8b0:	9f 67       	ori	r25, 0x7F	; 127
 8b2:	80 e8       	ldi	r24, 0x80	; 128
 8b4:	70 e0       	ldi	r23, 0x00	; 0
 8b6:	60 e0       	ldi	r22, 0x00	; 0
 8b8:	08 95       	ret

000008ba <__fp_nan>:
 8ba:	9f ef       	ldi	r25, 0xFF	; 255
 8bc:	80 ec       	ldi	r24, 0xC0	; 192
 8be:	08 95       	ret

000008c0 <__fp_pscA>:
 8c0:	00 24       	eor	r0, r0
 8c2:	0a 94       	dec	r0
 8c4:	16 16       	cp	r1, r22
 8c6:	17 06       	cpc	r1, r23
 8c8:	18 06       	cpc	r1, r24
 8ca:	09 06       	cpc	r0, r25
 8cc:	08 95       	ret

000008ce <__fp_pscB>:
 8ce:	00 24       	eor	r0, r0
 8d0:	0a 94       	dec	r0
 8d2:	12 16       	cp	r1, r18
 8d4:	13 06       	cpc	r1, r19
 8d6:	14 06       	cpc	r1, r20
 8d8:	05 06       	cpc	r0, r21
 8da:	08 95       	ret

000008dc <__fp_round>:
 8dc:	09 2e       	mov	r0, r25
 8de:	03 94       	inc	r0
 8e0:	00 0c       	add	r0, r0
 8e2:	11 f4       	brne	.+4      	; 0x8e8 <__fp_round+0xc>
 8e4:	88 23       	and	r24, r24
 8e6:	52 f0       	brmi	.+20     	; 0x8fc <__fp_round+0x20>
 8e8:	bb 0f       	add	r27, r27
 8ea:	40 f4       	brcc	.+16     	; 0x8fc <__fp_round+0x20>
 8ec:	bf 2b       	or	r27, r31
 8ee:	11 f4       	brne	.+4      	; 0x8f4 <__fp_round+0x18>
 8f0:	60 ff       	sbrs	r22, 0
 8f2:	04 c0       	rjmp	.+8      	; 0x8fc <__fp_round+0x20>
 8f4:	6f 5f       	subi	r22, 0xFF	; 255
 8f6:	7f 4f       	sbci	r23, 0xFF	; 255
 8f8:	8f 4f       	sbci	r24, 0xFF	; 255
 8fa:	9f 4f       	sbci	r25, 0xFF	; 255
 8fc:	08 95       	ret

000008fe <__fp_split3>:
 8fe:	57 fd       	sbrc	r21, 7
 900:	90 58       	subi	r25, 0x80	; 128
 902:	44 0f       	add	r20, r20
 904:	55 1f       	adc	r21, r21
 906:	59 f0       	breq	.+22     	; 0x91e <__fp_splitA+0x10>
 908:	5f 3f       	cpi	r21, 0xFF	; 255
 90a:	71 f0       	breq	.+28     	; 0x928 <__fp_splitA+0x1a>
 90c:	47 95       	ror	r20

0000090e <__fp_splitA>:
 90e:	88 0f       	add	r24, r24
 910:	97 fb       	bst	r25, 7
 912:	99 1f       	adc	r25, r25
 914:	61 f0       	breq	.+24     	; 0x92e <__fp_splitA+0x20>
 916:	9f 3f       	cpi	r25, 0xFF	; 255
 918:	79 f0       	breq	.+30     	; 0x938 <__fp_splitA+0x2a>
 91a:	87 95       	ror	r24
 91c:	08 95       	ret
 91e:	12 16       	cp	r1, r18
 920:	13 06       	cpc	r1, r19
 922:	14 06       	cpc	r1, r20
 924:	55 1f       	adc	r21, r21
 926:	f2 cf       	rjmp	.-28     	; 0x90c <__fp_split3+0xe>
 928:	46 95       	lsr	r20
 92a:	f1 df       	rcall	.-30     	; 0x90e <__fp_splitA>
 92c:	08 c0       	rjmp	.+16     	; 0x93e <__fp_splitA+0x30>
 92e:	16 16       	cp	r1, r22
 930:	17 06       	cpc	r1, r23
 932:	18 06       	cpc	r1, r24
 934:	99 1f       	adc	r25, r25
 936:	f1 cf       	rjmp	.-30     	; 0x91a <__fp_splitA+0xc>
 938:	86 95       	lsr	r24
 93a:	71 05       	cpc	r23, r1
 93c:	61 05       	cpc	r22, r1
 93e:	08 94       	sec
 940:	08 95       	ret

00000942 <__fp_zero>:
 942:	e8 94       	clt

00000944 <__fp_szero>:
 944:	bb 27       	eor	r27, r27
 946:	66 27       	eor	r22, r22
 948:	77 27       	eor	r23, r23
 94a:	cb 01       	movw	r24, r22
 94c:	97 f9       	bld	r25, 7
 94e:	08 95       	ret

00000950 <__gesf2>:
 950:	66 d0       	rcall	.+204    	; 0xa1e <__fp_cmp>
 952:	08 f4       	brcc	.+2      	; 0x956 <__gesf2+0x6>
 954:	8f ef       	ldi	r24, 0xFF	; 255
 956:	08 95       	ret

00000958 <__mulsf3>:
 958:	0b d0       	rcall	.+22     	; 0x970 <__mulsf3x>
 95a:	c0 cf       	rjmp	.-128    	; 0x8dc <__fp_round>
 95c:	b1 df       	rcall	.-158    	; 0x8c0 <__fp_pscA>
 95e:	28 f0       	brcs	.+10     	; 0x96a <__mulsf3+0x12>
 960:	b6 df       	rcall	.-148    	; 0x8ce <__fp_pscB>
 962:	18 f0       	brcs	.+6      	; 0x96a <__mulsf3+0x12>
 964:	95 23       	and	r25, r21
 966:	09 f0       	breq	.+2      	; 0x96a <__mulsf3+0x12>
 968:	a2 cf       	rjmp	.-188    	; 0x8ae <__fp_inf>
 96a:	a7 cf       	rjmp	.-178    	; 0x8ba <__fp_nan>
 96c:	11 24       	eor	r1, r1
 96e:	ea cf       	rjmp	.-44     	; 0x944 <__fp_szero>

00000970 <__mulsf3x>:
 970:	c6 df       	rcall	.-116    	; 0x8fe <__fp_split3>
 972:	a0 f3       	brcs	.-24     	; 0x95c <__mulsf3+0x4>

00000974 <__mulsf3_pse>:
 974:	95 9f       	mul	r25, r21
 976:	d1 f3       	breq	.-12     	; 0x96c <__mulsf3+0x14>
 978:	95 0f       	add	r25, r21
 97a:	50 e0       	ldi	r21, 0x00	; 0
 97c:	55 1f       	adc	r21, r21
 97e:	62 9f       	mul	r22, r18
 980:	f0 01       	movw	r30, r0
 982:	72 9f       	mul	r23, r18
 984:	bb 27       	eor	r27, r27
 986:	f0 0d       	add	r31, r0
 988:	b1 1d       	adc	r27, r1
 98a:	63 9f       	mul	r22, r19
 98c:	aa 27       	eor	r26, r26
 98e:	f0 0d       	add	r31, r0
 990:	b1 1d       	adc	r27, r1
 992:	aa 1f       	adc	r26, r26
 994:	64 9f       	mul	r22, r20
 996:	66 27       	eor	r22, r22
 998:	b0 0d       	add	r27, r0
 99a:	a1 1d       	adc	r26, r1
 99c:	66 1f       	adc	r22, r22
 99e:	82 9f       	mul	r24, r18
 9a0:	22 27       	eor	r18, r18
 9a2:	b0 0d       	add	r27, r0
 9a4:	a1 1d       	adc	r26, r1
 9a6:	62 1f       	adc	r22, r18
 9a8:	73 9f       	mul	r23, r19
 9aa:	b0 0d       	add	r27, r0
 9ac:	a1 1d       	adc	r26, r1
 9ae:	62 1f       	adc	r22, r18
 9b0:	83 9f       	mul	r24, r19
 9b2:	a0 0d       	add	r26, r0
 9b4:	61 1d       	adc	r22, r1
 9b6:	22 1f       	adc	r18, r18
 9b8:	74 9f       	mul	r23, r20
 9ba:	33 27       	eor	r19, r19
 9bc:	a0 0d       	add	r26, r0
 9be:	61 1d       	adc	r22, r1
 9c0:	23 1f       	adc	r18, r19
 9c2:	84 9f       	mul	r24, r20
 9c4:	60 0d       	add	r22, r0
 9c6:	21 1d       	adc	r18, r1
 9c8:	82 2f       	mov	r24, r18
 9ca:	76 2f       	mov	r23, r22
 9cc:	6a 2f       	mov	r22, r26
 9ce:	11 24       	eor	r1, r1
 9d0:	9f 57       	subi	r25, 0x7F	; 127
 9d2:	50 40       	sbci	r21, 0x00	; 0
 9d4:	8a f0       	brmi	.+34     	; 0x9f8 <__mulsf3_pse+0x84>
 9d6:	e1 f0       	breq	.+56     	; 0xa10 <__mulsf3_pse+0x9c>
 9d8:	88 23       	and	r24, r24
 9da:	4a f0       	brmi	.+18     	; 0x9ee <__mulsf3_pse+0x7a>
 9dc:	ee 0f       	add	r30, r30
 9de:	ff 1f       	adc	r31, r31
 9e0:	bb 1f       	adc	r27, r27
 9e2:	66 1f       	adc	r22, r22
 9e4:	77 1f       	adc	r23, r23
 9e6:	88 1f       	adc	r24, r24
 9e8:	91 50       	subi	r25, 0x01	; 1
 9ea:	50 40       	sbci	r21, 0x00	; 0
 9ec:	a9 f7       	brne	.-22     	; 0x9d8 <__mulsf3_pse+0x64>
 9ee:	9e 3f       	cpi	r25, 0xFE	; 254
 9f0:	51 05       	cpc	r21, r1
 9f2:	70 f0       	brcs	.+28     	; 0xa10 <__mulsf3_pse+0x9c>
 9f4:	5c cf       	rjmp	.-328    	; 0x8ae <__fp_inf>
 9f6:	a6 cf       	rjmp	.-180    	; 0x944 <__fp_szero>
 9f8:	5f 3f       	cpi	r21, 0xFF	; 255
 9fa:	ec f3       	brlt	.-6      	; 0x9f6 <__mulsf3_pse+0x82>
 9fc:	98 3e       	cpi	r25, 0xE8	; 232
 9fe:	dc f3       	brlt	.-10     	; 0x9f6 <__mulsf3_pse+0x82>
 a00:	86 95       	lsr	r24
 a02:	77 95       	ror	r23
 a04:	67 95       	ror	r22
 a06:	b7 95       	ror	r27
 a08:	f7 95       	ror	r31
 a0a:	e7 95       	ror	r30
 a0c:	9f 5f       	subi	r25, 0xFF	; 255
 a0e:	c1 f7       	brne	.-16     	; 0xa00 <__mulsf3_pse+0x8c>
 a10:	fe 2b       	or	r31, r30
 a12:	88 0f       	add	r24, r24
 a14:	91 1d       	adc	r25, r1
 a16:	96 95       	lsr	r25
 a18:	87 95       	ror	r24
 a1a:	97 f9       	bld	r25, 7
 a1c:	08 95       	ret

00000a1e <__fp_cmp>:
 a1e:	99 0f       	add	r25, r25
 a20:	00 08       	sbc	r0, r0
 a22:	55 0f       	add	r21, r21
 a24:	aa 0b       	sbc	r26, r26
 a26:	e0 e8       	ldi	r30, 0x80	; 128
 a28:	fe ef       	ldi	r31, 0xFE	; 254
 a2a:	16 16       	cp	r1, r22
 a2c:	17 06       	cpc	r1, r23
 a2e:	e8 07       	cpc	r30, r24
 a30:	f9 07       	cpc	r31, r25
 a32:	c0 f0       	brcs	.+48     	; 0xa64 <__fp_cmp+0x46>
 a34:	12 16       	cp	r1, r18
 a36:	13 06       	cpc	r1, r19
 a38:	e4 07       	cpc	r30, r20
 a3a:	f5 07       	cpc	r31, r21
 a3c:	98 f0       	brcs	.+38     	; 0xa64 <__fp_cmp+0x46>
 a3e:	62 1b       	sub	r22, r18
 a40:	73 0b       	sbc	r23, r19
 a42:	84 0b       	sbc	r24, r20
 a44:	95 0b       	sbc	r25, r21
 a46:	39 f4       	brne	.+14     	; 0xa56 <__fp_cmp+0x38>
 a48:	0a 26       	eor	r0, r26
 a4a:	61 f0       	breq	.+24     	; 0xa64 <__fp_cmp+0x46>
 a4c:	23 2b       	or	r18, r19
 a4e:	24 2b       	or	r18, r20
 a50:	25 2b       	or	r18, r21
 a52:	21 f4       	brne	.+8      	; 0xa5c <__fp_cmp+0x3e>
 a54:	08 95       	ret
 a56:	0a 26       	eor	r0, r26
 a58:	09 f4       	brne	.+2      	; 0xa5c <__fp_cmp+0x3e>
 a5a:	a1 40       	sbci	r26, 0x01	; 1
 a5c:	a6 95       	lsr	r26
 a5e:	8f ef       	ldi	r24, 0xFF	; 255
 a60:	81 1d       	adc	r24, r1
 a62:	81 1d       	adc	r24, r1
 a64:	08 95       	ret

00000a66 <_exit>:
 a66:	f8 94       	cli

00000a68 <__stop_program>:
 a68:	ff cf       	rjmp	.-2      	; 0xa68 <__stop_program>
